{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/activity.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ProjectActivitiesComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r2.title);\n  }\n}\nfunction ProjectActivitiesComponent_div_17_tbody_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const activity_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", activity_r4.activityType, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", activity_r4.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r4.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r4.assignDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", activity_r4.assignedBy, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", activity_r4.assignedTo, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r4.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r4.dueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", activity_r4.status, \"\");\n  }\n}\nfunction ProjectActivitiesComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"h2\");\n    i0.ɵɵtext(3, \" Activities Of Employees\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 9)(5, \"table\", 10)(6, \"thead\")(7, \"tr\")(8, \"th\");\n    i0.ɵɵtext(9, \"activityType\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"assignDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"assignedBy\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"assignedTo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\");\n    i0.ɵɵtext(21, \"startDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"th\");\n    i0.ɵɵtext(23, \"dueDate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"th\");\n    i0.ɵɵtext(25, \"status\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(26, ProjectActivitiesComponent_div_17_tbody_26_Template, 20, 9, \"tbody\", 11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(26);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tasks);\n  }\n}\nexport class ProjectActivitiesComponent {\n  // showTodoTasks: boolean = false;\n  // showInProgressTasks: boolean = false;\n  // showCompletedTasks: boolean = false;\n  constructor(service) {\n    this.service = service;\n    this.projects = [];\n    this.activities = [];\n    this.projectId = 0;\n    this.isFalse = false;\n    this.tasks = [];\n    // showTasks(status: string): void {\n    //   this.isFalse=true;\n    //   switch (status) {\n    //     case 'todo':\n    //       this.tasks = this.activities.filter((p) => p.status.includes('todo'));\n    //       break;\n    //     case 'inprogress':\n    //       this.tasks = this.activities.filter((p) =>p.status.includes('inprogress'));\n    //       break;\n    //     case 'completed':\n    //       this.tasks = this.activities.filter((p) =>p.status.includes('completed'));\n    //       break;\n    //     default:\n    //       this.tasks = [];\n    //       break;\n    //   }\n    // }\n    this.showTodoTasks = false;\n    this.showInProgressTasks = false;\n    this.showCompletedTasks = false;\n  }\n  ngOnInit() {\n    this.service.getAllProjects().subscribe(res => {\n      this.projects = res;\n      this.projectId = this.projects[0].id;\n      this.getActivitiesOfSelectedProject(this.projectId);\n    });\n  }\n  getSelectedProjectId(e) {\n    this.projectId = e.target.value;\n    console.log(this.projectId);\n    this.getActivitiesOfSelectedProject(this.projectId);\n  }\n  getActivitiesOfSelectedProject(projectId) {\n    this.service.getAllActivitiesByProject(projectId).subscribe(res => {\n      this.activities = res;\n      console.log(res);\n    });\n  }\n  showTasks(taskType) {\n    // Reset other checkboxes when a checkbox is checked\n    if (taskType === 'todo') {\n      this.showTodoTasks = !this.showTodoTasks;\n      this.tasks = this.activities.filter(p => p.status.includes('todo'));\n      this.showInProgressTasks = false;\n      this.showCompletedTasks = false;\n    } else if (taskType === 'inprogress') {\n      this.showInProgressTasks = !this.showInProgressTasks;\n      this.tasks = this.activities.filter(p => p.status.includes('inprogress'));\n      this.showTodoTasks = false;\n      this.showCompletedTasks = false;\n    } else if (taskType === 'completed') {\n      this.showCompletedTasks = !this.showCompletedTasks;\n      this.tasks = this.activities.filter(p => p.status.includes('completed'));\n      this.showTodoTasks = false;\n      this.showInProgressTasks = false;\n    }\n  }\n  static #_ = this.ɵfac = function ProjectActivitiesComponent_Factory(t) {\n    return new (t || ProjectActivitiesComponent)(i0.ɵɵdirectiveInject(i1.ActivityService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectActivitiesComponent,\n    selectors: [[\"app-project-activities\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[\"for\", \"project\"], [\"id\", \"project\", \"name\", \"project\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"checkbox-container\"], [\"type\", \"checkbox\", 3, \"change\"], [\"id\", \"tasksContainer\", 4, \"ngIf\"], [3, \"value\"], [\"id\", \"tasksContainer\"], [1, \"container\"], [1, \"card\"], [1, \"table-bordered\", \"text-center\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ProjectActivitiesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 0);\n        i0.ɵɵtext(3, \"Project Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 1);\n        i0.ɵɵlistener(\"change\", function ProjectActivitiesComponent_Template_select_change_4_listener($event) {\n          return ctx.getSelectedProjectId($event);\n        });\n        i0.ɵɵtemplate(5, ProjectActivitiesComponent_option_5_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(6, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\")(9, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function ProjectActivitiesComponent_Template_input_change_9_listener() {\n          return ctx.showTasks(\"todo\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" ToDo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\")(12, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function ProjectActivitiesComponent_Template_input_change_12_listener() {\n          return ctx.showTasks(\"inprogress\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" Inprogress\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\")(15, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function ProjectActivitiesComponent_Template_input_change_15_listener() {\n          return ctx.showTasks(\"completed\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \" Completed\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, ProjectActivitiesComponent_div_17_Template, 27, 1, \"div\", 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.isFalse);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ProjectActivitiesComponent","constructor","service","ngOnInit","getAllProjects","subscribe","res","projects","projectId","id","getActivitiesOfSelectedProject","getSelectedProjectId","e","target","value","console","log","getAllActivitiesByProject","activities","showTasks","taskType","showTodoTasks","tasks","filter","p","status","includes","showInProgressTasks","showCompletedTasks","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\project-activities\\project-activities.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\project-activities\\project-activities.component.ts"],"sourcesContent":["&nbsp;&nbsp;&nbsp;&nbsp;\n\n<div>\n  <label for=\"project\">Project Name:</label>\n  <select id=\"project\" name=\"project\" (change)=\"getSelectedProjectId($event)\">\n    <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{project.title}}</option>\n  </select>\n</div>&nbsp;&nbsp;&nbsp;&nbsp;\n\n\n<!-- <div class=\"button-container\">\n  <button class=\"button\" (click)=\"showTasks('todo')\">ToDo</button>\n  <button class=\"button\" (click)=\"showTasks('inprogress')\">Inprogress</button>\n  <button class=\"button\" (click)=\"showTasks('completed')\">Completed</button>\n</div> -->\n\n<div class=\"checkbox-container\">\n  <label >\n    <input type=\"checkbox\" (change)=\"showTasks('todo')\"  > ToDo</label>\n  <label >\n    <input type=\"checkbox\" (change)=\"showTasks('inprogress')\" > Inprogress</label>\n  <label >\n    <input type=\"checkbox\" (change)=\"showTasks('completed')\"  > Completed</label>\n</div>\n\n<div id=\"tasksContainer\" *ngIf=\"isFalse\">\n  <div class=\"container\">\n    <h2> Activities Of Employees</h2>\n    <div class=\"card\">\n      <table class=\"table-bordered text-center\">\n        <thead>\n          <tr>\n            <th>activityType</th>\n            <th>title</th>\n            <th>description</th>\n            <th>assignDate</th>\n            <th>assignedBy</th>\n            <th>assignedTo</th>\n            <th>startDate</th>\n            <th>dueDate</th>\n            <th>status</th>\n\n          </tr>\n        </thead>\n        <tbody *ngFor=\"let activity of tasks\">\n          <tr>\n            <td> {{activity.activityType}}</td>\n            <td> {{activity.title}}</td>\n            <td>{{activity.description}}</td>\n            <td>{{activity.assignDate}}</td>\n            <td> {{activity.assignedBy}}</td>\n            <td> {{activity.assignedTo}}</td>\n            <td>{{activity.startDate}}</td>\n            <td>{{activity.dueDate}}</td>\n            <td> {{activity.status}}</td>\n\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivityService } from '../../Services/activity.service';\nimport { Project } from 'src/app/projects/Models/project';\nimport { Activity } from '../../Models/Activity';\n\n@Component({\n  selector: 'app-project-activities',\n  templateUrl: './project-activities.component.html',\n  styleUrls: ['./project-activities.component.css'],\n})\nexport class ProjectActivitiesComponent implements OnInit {\n  projects: Project[] = [];\n  activities: Activity[] = [];\n  projectId: number = 0;\n  isFalse:boolean=false;\n  // showTodoTasks: boolean = false;\n  // showInProgressTasks: boolean = false;\n  // showCompletedTasks: boolean = false;\n\n  constructor(private service: ActivityService) {}\n\n  ngOnInit(): void {\n    this.service.getAllProjects().subscribe((res) => {\n      this.projects = res;\n      this.projectId = this.projects[0].id;\n      this.getActivitiesOfSelectedProject(this.projectId);\n    });\n  }\n\n  getSelectedProjectId(e: any) {\n    this.projectId = e.target.value;\n    console.log(this.projectId);\n    this.getActivitiesOfSelectedProject(this.projectId);\n  }\n\n  getActivitiesOfSelectedProject(projectId: number) {\n    this.service.getAllActivitiesByProject(projectId).subscribe((res) => {\n      this.activities = res;\n\n      console.log(res);\n    });\n  }\n\n  tasks: Activity[] = [];\n\n  // showTasks(status: string): void {\n  //   this.isFalse=true;\n  //   switch (status) {\n  //     case 'todo':\n  //       this.tasks = this.activities.filter((p) => p.status.includes('todo'));\n        \n  //       break;\n  //     case 'inprogress':\n  //       this.tasks = this.activities.filter((p) =>p.status.includes('inprogress'));\n       \n  //       break;\n  //     case 'completed':\n  //       this.tasks = this.activities.filter((p) =>p.status.includes('completed'));\n      \n  //       break;\n  //     default:\n  //       this.tasks = [];\n  //       break;\n  //   }\n  // }\n\n\n  showTodoTasks: boolean = false;\n  showInProgressTasks: boolean = false;\n  showCompletedTasks: boolean = false;\n\n  showTasks(taskType: string) {\n    // Reset other checkboxes when a checkbox is checked\n    if (taskType === 'todo') {\n      this.showTodoTasks = !this.showTodoTasks;\n      this.tasks = this.activities.filter((p) => p.status.includes('todo'));\n      this.showInProgressTasks = false;\n      this.showCompletedTasks = false;\n    } else if (taskType === 'inprogress') {\n      this.showInProgressTasks = !this.showInProgressTasks;\n      this.tasks = this.activities.filter((p) =>p.status.includes('inprogress'));\n      this.showTodoTasks = false;\n      this.showCompletedTasks = false;\n    } else if (taskType === 'completed') {\n      this.showCompletedTasks = !this.showCompletedTasks;\n      this.tasks = this.activities.filter((p) =>p.status.includes('completed'));\n      this.showTodoTasks = false;\n      this.showInProgressTasks = false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}