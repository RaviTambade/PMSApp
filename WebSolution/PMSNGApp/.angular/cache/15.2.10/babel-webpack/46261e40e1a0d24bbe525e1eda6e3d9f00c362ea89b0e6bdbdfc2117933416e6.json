{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/time-sheet/services/time-sheet.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UpdateTimesheetEntryComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", activity_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, activity_r1));\n  }\n}\nexport class UpdateTimesheetEntryComponent {\n  constructor(timeSheetService) {\n    this.timeSheetService = timeSheetService;\n    this.activitiyTypes = ['task', 'userstory', 'bug', 'issues', 'meeting', 'learning', 'mentoring', 'break', 'clientcall', 'other'];\n    this.stateChangeEvent = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.timeSheetEntry = changes['timeSheetEntry'].currentValue;\n    this.timeSheetEntry.fromTime = this.timeSheetEntry.fromTime.split(':00').at(0);\n    this.timeSheetEntry.toTime = this.timeSheetEntry.toTime.split(':00').at(0);\n  }\n  onClick() {\n    let timeSheetEntry = {\n      id: this.timeSheetEntry.id,\n      fromTime: this.timeSheetEntry.fromTime + ':00',\n      toTime: this.timeSheetEntry.toTime + ':00',\n      durationInMinutes: this.timeSheetEntry.durationInMinutes,\n      durationInHours: this.timeSheetEntry.durationInHours,\n      timeSheetId: this.timeSheetEntry.timeSheetId,\n      work: this.timeSheetEntry.work,\n      workCategory: this.timeSheetEntry.workCategory,\n      description: this.timeSheetEntry.description\n    };\n    this.timeSheetService.updateTimeSheetEntry(timeSheetEntry.id, timeSheetEntry).subscribe(res => {\n      if (res) {\n        this.stateChangeEvent.emit(true);\n      }\n    });\n  }\n  getDuration() {\n    let startTime = this.timeSheetEntry.fromTime;\n    let endTime = this.timeSheetEntry.toTime;\n    if (startTime != '' && endTime != '') {\n      const startDate = new Date(`1970-01-01T${startTime}`);\n      const endDate = new Date(`1970-01-01T${endTime}`);\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\n      this.timeSheetEntry.durationInMinutes = durationMilliseconds / (1000 * 60);\n      this.timeSheetEntry.durationInHours = this.convertMinutesintoHours(this.timeSheetEntry.durationInMinutes);\n    }\n  }\n  convertMinutesintoHours(minutes) {\n    let str = `${(minutes / 60).toFixed(0)}h: ${minutes % 60}m`;\n    return str;\n  }\n  static #_ = this.ɵfac = function UpdateTimesheetEntryComponent_Factory(t) {\n    return new (t || UpdateTimesheetEntryComponent)(i0.ɵɵdirectiveInject(i1.TimeSheetService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateTimesheetEntryComponent,\n    selectors: [[\"app-update-timesheet-entry\"]],\n    inputs: {\n      timeSheetEntry: \"timeSheetEntry\"\n    },\n    outputs: {\n      stateChangeEvent: \"stateChangeEvent\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 29,\n    vars: 7,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\", \"id\", \"\", \"cols\", \"30\", \"rows\", \"1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"time\", \"name\", \"fromTime\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"time\", \"name\", \"toTime\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"submit\", 3, \"click\"], [3, \"value\"]],\n    template: function UpdateTimesheetEntryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \" Update TimeSheetEntry\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"label\");\n        i0.ɵɵtext(3, \"Activity:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTimesheetEntryComponent_Template_select_ngModelChange_4_listener($event) {\n          return ctx.timeSheetEntry.workCategory = $event;\n        });\n        i0.ɵɵtemplate(5, UpdateTimesheetEntryComponent_option_5_Template, 3, 4, \"option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"label\");\n        i0.ɵɵtext(8, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTimesheetEntryComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.timeSheetEntry.work = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\")(11, \"br\");\n        i0.ɵɵelementStart(12, \"label\");\n        i0.ɵɵtext(13, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"textarea\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTimesheetEntryComponent_Template_textarea_ngModelChange_14_listener($event) {\n          return ctx.timeSheetEntry.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"label\");\n        i0.ɵɵtext(17, \"From :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTimesheetEntryComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.timeSheetEntry.fromTime = $event;\n        })(\"change\", function UpdateTimesheetEntryComponent_Template_input_change_18_listener() {\n          return ctx.getDuration();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"label\");\n        i0.ɵɵtext(20, \"TO:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTimesheetEntryComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.timeSheetEntry.toTime = $event;\n        })(\"change\", function UpdateTimesheetEntryComponent_Template_input_change_21_listener() {\n          return ctx.getDuration();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"br\")(23, \"br\");\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function UpdateTimesheetEntryComponent_Template_button_click_27_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵtext(28, \"Update\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.workCategory);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.activitiyTypes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.work);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.fromTime);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.toTime);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"duration:\", ctx.timeSheetEntry.durationInHours, \"\");\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i2.TitleCasePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","UpdateTimesheetEntryComponent","constructor","timeSheetService","ngOnChanges","changes","timeSheetEntry","currentValue","fromTime","split","at","toTime","onClick","id","durationInMinutes","durationInHours","timeSheetId","work","workCategory","description","updateTimeSheetEntry","subscribe","res","stateChangeEvent","emit","getDuration","startTime","endTime","startDate","Date","endDate","durationMilliseconds","getTime","convertMinutesintoHours","minutes","str","toFixed","selectors","inputs","outputs","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\update-timesheet-entry\\update-timesheet-entry.component.ts","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\update-timesheet-entry\\update-timesheet-entry.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { TimeSheetEntry } from 'src/app/time-sheet/models/timesheetentry';\r\nimport { TimeSheetService } from 'src/app/time-sheet/services/time-sheet.service';\r\n\r\n@Component({\r\n  selector: 'app-update-timesheet-entry',\r\n  templateUrl: './update-timesheet-entry.component.html',\r\n  styleUrls: ['./update-timesheet-entry.component.css'],\r\n})\r\nexport class UpdateTimesheetEntryComponent {\r\n  activitiyTypes: string[] = [\r\n    'task',\r\n    'userstory',\r\n    'bug',\r\n    'issues',\r\n    'meeting',\r\n    'learning',\r\n    'mentoring',\r\n    'break',\r\n    'clientcall',\r\n    'other',\r\n  ];\r\n\r\n  @Input() timeSheetEntry!: TimeSheetEntry;\r\n  @Output() stateChangeEvent = new EventEmitter<boolean>();\r\n  constructor(private timeSheetService: TimeSheetService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.timeSheetEntry = changes['timeSheetEntry'].currentValue;\r\n    this.timeSheetEntry.fromTime=this.timeSheetEntry.fromTime.split(':00').at(0)!;\r\n    this.timeSheetEntry.toTime=this.timeSheetEntry.toTime.split(':00').at(0)!;\r\n  }\r\n\r\n  onClick() {\r\n    let timeSheetEntry: TimeSheetEntry = {\r\n      id: this.timeSheetEntry.id,\r\n      fromTime: this.timeSheetEntry.fromTime+':00',\r\n      toTime: this.timeSheetEntry.toTime+':00',\r\n      durationInMinutes: this.timeSheetEntry.durationInMinutes,\r\n      durationInHours: this.timeSheetEntry.durationInHours,\r\n      timeSheetId: this.timeSheetEntry.timeSheetId,\r\n      work: this.timeSheetEntry.work,\r\n      workCategory: this.timeSheetEntry.workCategory,\r\n      description: this.timeSheetEntry.description,\r\n    };\r\n\r\n    this.timeSheetService\r\n      .updateTimeSheetEntry(timeSheetEntry.id, timeSheetEntry)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.stateChangeEvent.emit(true);\r\n        }\r\n      });\r\n  }\r\n  getDuration() {\r\n    let startTime = this.timeSheetEntry.fromTime;\r\n    let endTime = this.timeSheetEntry.toTime;\r\n    if (startTime != '' && endTime != '') {\r\n      const startDate = new Date(`1970-01-01T${startTime}`);\r\n      const endDate = new Date(`1970-01-01T${endTime}`);\r\n\r\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\r\n      this.timeSheetEntry.durationInMinutes =\r\n        durationMilliseconds / (1000 * 60);\r\n      this.timeSheetEntry.durationInHours = this.convertMinutesintoHours(\r\n        this.timeSheetEntry.durationInMinutes\r\n      );\r\n    }\r\n  }\r\n\r\n  convertMinutesintoHours(minutes: number) {\r\n    let str = `${(minutes / 60).toFixed(0)}h: ${minutes % 60}m`;\r\n    return str;\r\n  }\r\n}\r\n","<h2> Update TimeSheetEntry</h2>\r\n<label>Activity:</label>\r\n<select [(ngModel)]=\"timeSheetEntry.workCategory\">\r\n    <option *ngFor=\"let activity of activitiyTypes;let i=index\" [value]=\"activity\">{{activity |titlecase}}</option>\r\n</select><br>\r\n<label>Title:</label>\r\n<input type=\"text\" [(ngModel)]=\"timeSheetEntry.work\"> <br /><br>\r\n\r\n<label>Description:</label>\r\n<textarea name=\"\" id=\"\" cols=\"30\" rows=\"1\" [(ngModel)]=\"timeSheetEntry.description\"></textarea><br>\r\n<label>From :</label>\r\n<input type=\"time\" name=\"fromTime\" [(ngModel)]=\"timeSheetEntry.fromTime\" (change)=\"getDuration()\">\r\n<label>TO:</label>\r\n<input type=\"time\" name=\"toTime\" [(ngModel)]=\"timeSheetEntry.toTime\" (change)=\"getDuration()\"> <br /> <br />\r\n\r\n\r\n<p>duration:{{timeSheetEntry.durationInHours}}</p>\r\n<br>\r\n<button type=\"submit\" (click)=\"onClick()\">Update</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}