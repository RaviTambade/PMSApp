{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.serviceurl = environment.apiUrl;\n  }\n  getAllProjects() {\n    let url = `${this.serviceurl}/projects`;\n    return this.httpClient.get(url);\n  }\n  getProjectOfEmployee(employeeId) {\n    let url = this.serviceurl + \"/projectmgmt/projects/employees/\" + employeeId;\n    return this.httpClient.get(url);\n  }\n  getProjectDetailsById(projectId) {\n    let url = this.serviceurl + \"projects/\" + projectId;\n    return this.httpClient.get(url);\n  }\n  assignedEmployeeToProject(projectId, employeeId, project) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/assignproject/\" + projectId + \"/\" + employeeId;\n    return this.httpClient.post(url, project);\n  }\n  releaseEmployeeFromProject(projectId, employeeId, project) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/releaseproject/\" + projectId + \"/\" + employeeId;\n    return this.httpClient.post(url, project);\n  }\n  getAllUnassignedEmployees(status) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/unassignedemployees/\" + status;\n    return this.httpClient.get(url);\n  }\n  getAllAssignedEmployees(status) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/assignedemployees/\" + status;\n    return this.httpClient.get(url);\n  }\n  GetAllProjectsBetweenDates(fromAssignedDate, toAssignedDate) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/projects/fromassigneddate/\" + fromAssignedDate + \"/toassigneddate\" + toAssignedDate;\n    return this.httpClient.get(url);\n  }\n  GetAllProjectsOfEmployeeBetweenDates(fromAssignedDate, toAssignedDate, employeeId) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/projects/\" + employeeId + \"/fromassigneddate/\" + fromAssignedDate + \"/toassigneddate\" + toAssignedDate;\n    return this.httpClient.get(url);\n  }\n  GetAllEmployeesOfProject(projectId) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/employees/\" + projectId;\n    return this.httpClient.get(url);\n  }\n  static #_ = this.ɵfac = function ProjectsService_Factory(t) {\n    return new (t || ProjectsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectsService,\n    factory: ProjectsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IADtB,eAAU,GAASH,WAAW,CAACI,MAAM;EACC;EAG9CC,cAAc;IACZ,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACC,UAAU,WAAW;IACvC,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAYF,GAAG,CAAC;EAC5C;EAEAG,oBAAoB,CAACC,UAAkB;IACrC,IAAIJ,GAAG,GAAG,IAAI,CAACC,UAAU,GAAC,kCAAkC,GAAGG,UAAU;IACzE,OAAO,IAAI,CAACP,UAAU,CAACK,GAAG,CAAYF,GAAG,CAAC;EAC5C;EAGAK,qBAAqB,CAACC,SAAiB;IACrC,IAAIN,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,WAAW,GAAEK,SAAS;IAC9C,OAAO,IAAI,CAACT,UAAU,CAACK,GAAG,CAAUF,GAAG,CAAC;EAC1C;EAEAO,yBAAyB,CAACD,SAAgB,EAACF,UAAiB,EAACI,OAAyB;IACpF,IAAIR,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,+CAA+C,GAAEK,SAAS,GAAE,GAAG,GAACF,UAAU;IAClG,OAAO,IAAI,CAACP,UAAU,CAACY,IAAI,CAAoBT,GAAG,EAACQ,OAAO,CAAC;EAC7D;EAEAE,0BAA0B,CAACJ,SAAgB,EAACF,UAAiB,EAACI,OAAW;IACvE,IAAIR,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,gDAAgD,GAAEK,SAAS,GAAE,GAAG,GAACF,UAAU;IACnG,OAAO,IAAI,CAACP,UAAU,CAACY,IAAI,CAAMT,GAAG,EAACQ,OAAO,CAAC;EAC/C;EAEAG,yBAAyB,CAACC,MAAa;IACrC,IAAIZ,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,qDAAqD,GAAEW,MAAM;IACrF,OAAO,IAAI,CAACf,UAAU,CAACK,GAAG,CAAsBF,GAAG,CAAC;EACtD;EAEAa,uBAAuB,CAACD,MAAa;IACnC,IAAIZ,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,mDAAmD,GAAEW,MAAM;IACnF,OAAO,IAAI,CAACf,UAAU,CAACK,GAAG,CAAsBF,GAAG,CAAC;EACtD;EAEAc,0BAA0B,CAACC,gBAAuB,EAACC,cAAqB;IACtE,IAAIhB,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,2DAA2D,GAAEc,gBAAgB,GAAC,iBAAiB,GAACC,cAAc;IACtI,OAAO,IAAI,CAACnB,UAAU,CAACK,GAAG,CAAsBF,GAAG,CAAC;EACtD;EAEAiB,oCAAoC,CAACF,gBAAuB,EAACC,cAAqB,EAACZ,UAAiB;IAClG,IAAIJ,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,0CAA0C,GAACG,UAAU,GAAC,oBAAoB,GAAEW,gBAAgB,GAAC,iBAAiB,GAACC,cAAc;IACrJ,OAAO,IAAI,CAACnB,UAAU,CAACK,GAAG,CAAsBF,GAAG,CAAC;EACtD;EAEAkB,wBAAwB,CAACZ,SAAgB;IACvC,IAAIN,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,2CAA2C,GAAEK,SAAS;IAC9E,OAAO,IAAI,CAACT,UAAU,CAACK,GAAG,CAAsBF,GAAG,CAAC;EACtD;EAAC;qBAvDUL,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAwB,SAAfxB,eAAe;IAAAyB,YAFd;EAAM","names":["environment","ProjectsService","constructor","httpClient","apiUrl","getAllProjects","url","serviceurl","get","getProjectOfEmployee","employeeId","getProjectDetailsById","projectId","assignedEmployeeToProject","project","post","releaseEmployeeFromProject","getAllUnassignedEmployees","status","getAllAssignedEmployees","GetAllProjectsBetweenDates","fromAssignedDate","toAssignedDate","GetAllProjectsOfEmployeeBetweenDates","GetAllEmployeesOfProject","factory","providedIn"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\projects\\Services\\projects.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Project } from '../Models/project';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ProjectAllocation } from '../Models/projectallocation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n  \r\n  private serviceurl :string=environment.apiUrl;\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  getAllProjects(): Observable<Project[]> {\r\n    let url = `${this.serviceurl}/projects`;\r\n    return this.httpClient.get<Project[]>(url)\r\n  }\r\n\r\n  getProjectOfEmployee(employeeId: number): Observable<Project[]> {\r\n    let url = this.serviceurl+\"/projectmgmt/projects/employees/\" + employeeId\r\n    return this.httpClient.get<Project[]>(url)\r\n  }\r\n \r\n\r\n  getProjectDetailsById(projectId :number):Observable<Project>{\r\n    let url=this.serviceurl+\"projects/\"+ projectId\r\n    return this.httpClient.get<Project>(url);\r\n  }\r\n\r\n  assignedEmployeeToProject(projectId:number,employeeId:number,project:ProjectAllocation):Observable<ProjectAllocation>{\r\n    let url=this.serviceurl+\"/projectmgmt/projectallocation/assignproject/\"+ projectId +\"/\"+employeeId;\r\n    return this.httpClient.post<ProjectAllocation>(url,project);\r\n  }\r\n\r\n  releaseEmployeeFromProject(projectId:number,employeeId:number,project:any):Observable<any>{\r\n    let url=this.serviceurl+\"/projectmgmt/projectallocation/releaseproject/\"+ projectId +\"/\"+employeeId;\r\n    return this.httpClient.post<any>(url,project);\r\n  }\r\n\r\n  getAllUnassignedEmployees(status:string):Observable<ProjectAllocation[]>{\r\n    let url=this.serviceurl+\"/projectmgmt/projectallocation/unassignedemployees/\"+ status ;\r\n    return this.httpClient.get<ProjectAllocation[]>(url);\r\n  }\r\n\r\n  getAllAssignedEmployees(status:string):Observable<ProjectAllocation[]>{\r\n    let url=this.serviceurl+\"/projectmgmt/projectallocation/assignedemployees/\"+ status ;\r\n    return this.httpClient.get<ProjectAllocation[]>(url);\r\n  }\r\n\r\n  GetAllProjectsBetweenDates(fromAssignedDate:string,toAssignedDate:string):Observable<ProjectAllocation[]>{\r\n    let url=this.serviceurl+\"/projectmgmt/projectallocation/projects/fromassigneddate/\"+ fromAssignedDate+\"/toassigneddate\"+toAssignedDate ;\r\n    return this.httpClient.get<ProjectAllocation[]>(url);\r\n  }\r\n\r\n  GetAllProjectsOfEmployeeBetweenDates(fromAssignedDate:string,toAssignedDate:string,employeeId:number):Observable<ProjectAllocation[]>{\r\n    let url=this.serviceurl+\"/projectmgmt/projectallocation/projects/\"+employeeId+\"/fromassigneddate/\"+ fromAssignedDate+\"/toassigneddate\"+toAssignedDate ;\r\n    return this.httpClient.get<ProjectAllocation[]>(url);\r\n  }\r\n\r\n  GetAllEmployeesOfProject(projectId:number):Observable<ProjectAllocation[]>{\r\n    let url=this.serviceurl+\"/projectmgmt/projectallocation/employees/\" +projectId;  \r\n    return this.httpClient.get<ProjectAllocation[]>(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}