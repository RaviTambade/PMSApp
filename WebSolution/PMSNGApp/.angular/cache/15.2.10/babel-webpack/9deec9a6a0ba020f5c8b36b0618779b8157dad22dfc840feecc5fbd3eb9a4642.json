{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/time-sheet/services/time-sheet.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../insert-time-sheet-entry/insert-time-sheet-entry.component\";\nimport * as i4 from \"../../popup/popup.component\";\nfunction InsertTimeSheetComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-insert-time-sheet-entry\");\n  }\n}\nfunction InsertTimeSheetComponent_app_popup_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-popup\", 6);\n    i0.ɵɵlistener(\"closePopup\", function InsertTimeSheetComponent_app_popup_4_Template_app_popup_closePopup_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onClosePopup());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"templateToRender\", _r0);\n  }\n}\nfunction InsertTimeSheetComponent_tbody_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const timeSheetEntry_r6 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r6.workCategory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r6.work);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r6.fromTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r6.toTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r6.durationInHours);\n  }\n}\nexport class InsertTimeSheetComponent {\n  constructor(timeSheetSvc) {\n    this.timeSheetSvc = timeSheetSvc;\n    this.timeSheetEntries = [];\n    this.totalminutes = 0;\n    this.showaddTimesheetEntry = false;\n    this.todaysDate = new Date().toISOString().slice(0, 10);\n  }\n  ngOnInit() {\n    this.subscription = this.timeSheetSvc.ReceiveTimeSheetEntries().subscribe(res => {\n      this.totalminutes = 0;\n      res.map(r => r.durationInMinutes).forEach(i => {\n        this.totalminutes += i;\n      });\n      this.showaddTimesheetEntry = false;\n      this.totalminutes = this.convertMinutesintoHours(this.totalminutes);\n      this.timeSheetEntries = res;\n      console.log(res);\n    });\n  }\n  onSubmit() {\n    this.timeSheetEntries.forEach(r => {\n      r.fromTime = r.fromTime + ':00';\n      r.toTime = r.toTime + ':00';\n    });\n    let timesheet = {\n      id: 0,\n      timeSheetDate: new Date().toISOString().slice(0, 10),\n      status: '',\n      employeeId: 10,\n      timeSheetEntries: this.timeSheetEntries,\n      statusChangedDate: new Date().toISOString().slice(0, 10)\n    };\n    this.timeSheetSvc.addTimeSheet(timesheet).subscribe(res => {\n      this.timeSheetEntries.forEach(r => {\n        r.fromTime = r.fromTime.split(':00').at(0);\n        r.toTime = r.toTime.split(':00').at(0);\n      });\n      alert('timesheet added');\n    });\n  }\n  convertMinutesintoHours(minutes) {\n    let str = `${(minutes / 60).toFixed(0)}h: ${minutes % 60}m`;\n    return str;\n  }\n  onClickAddTimesheetEntry() {\n    this.showaddTimesheetEntry = true;\n  }\n  onClosePopup() {\n    this.showaddTimesheetEntry = false;\n  }\n  static #_ = this.ɵfac = function InsertTimeSheetComponent_Factory(t) {\n    return new (t || InsertTimeSheetComponent)(i0.ɵɵdirectiveInject(i1.TimeSheetService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InsertTimeSheetComponent,\n    selectors: [[\"app-insert-time-sheet\"]],\n    decls: 28,\n    vars: 4,\n    consts: [[\"insertTimesheetEnrty\", \"\"], [3, \"click\"], [3, \"templateToRender\", \"closePopup\", 4, \"ngIf\"], [1, \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"click\"], [3, \"templateToRender\", \"closePopup\"]],\n    template: function InsertTimeSheetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, InsertTimeSheetComponent_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function InsertTimeSheetComponent_Template_button_click_2_listener() {\n          return ctx.onClickAddTimesheetEntry();\n        });\n        i0.ɵɵtext(3, \" Add \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, InsertTimeSheetComponent_app_popup_4_Template, 1, 1, \"app-popup\", 2);\n        i0.ɵɵelement(5, \"br\")(6, \"br\")(7, \"br\");\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"table\", 3)(11, \"thead\")(12, \"tr\")(13, \"th\");\n        i0.ɵɵtext(14, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"work\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"StartTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"EndTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22, \"Duration\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(23, InsertTimeSheetComponent_tbody_23_Template, 12, 5, \"tbody\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function InsertTimeSheetComponent_Template_button_click_26_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(27, \" submit \");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showaddTimesheetEntry);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" Date : \", ctx.todaysDate, \"\");\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.timeSheetEntries);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total Hours : \", ctx.totalminutes, \"\");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.InsertTimeSheetEntryComponent, i4.PopupComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","InsertTimeSheetComponent","constructor","timeSheetSvc","Date","toISOString","slice","ngOnInit","subscription","ReceiveTimeSheetEntries","subscribe","res","totalminutes","map","r","durationInMinutes","forEach","i","showaddTimesheetEntry","convertMinutesintoHours","timeSheetEntries","console","log","onSubmit","fromTime","toTime","timesheet","id","timeSheetDate","status","employeeId","statusChangedDate","addTimeSheet","split","at","alert","minutes","str","toFixed","onClickAddTimesheetEntry","onClosePopup","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\insert-time-sheet\\insert-time-sheet.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\insert-time-sheet\\insert-time-sheet.component.ts"],"sourcesContent":["\r\n<ng-template #insertTimesheetEnrty>\r\n<app-insert-time-sheet-entry></app-insert-time-sheet-entry>\r\n</ng-template>\r\n\r\n<button (click)=\"onClickAddTimesheetEntry()\"> Add </button>\r\n<app-popup *ngIf=\"showaddTimesheetEntry\" [templateToRender]=\"insertTimesheetEnrty\" (closePopup)=\"onClosePopup()\"></app-popup>\r\n\r\n<br><br><br>\r\n<p> Date : {{todaysDate}}</p>\r\n \r\n<table class=\"table-bordered\">\r\n    <thead>\r\n        <tr>\r\n            \r\n            <th>Category</th>\r\n            <th>work</th>\r\n            <th>StartTime</th>\r\n            <th>EndTime</th>\r\n            <th>Duration</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody *ngFor=\"let timeSheetEntry of timeSheetEntries\">\r\n        <tr>\r\n            <td>{{timeSheetEntry.workCategory }}</td>\r\n            <td>{{timeSheetEntry.work }}</td>\r\n            <td>{{timeSheetEntry.fromTime }}</td>\r\n            <td>{{timeSheetEntry.toTime}}</td>\r\n            <td>{{timeSheetEntry.durationInHours}}</td>\r\n        </tr>\r\n       \r\n    </tbody>\r\n    \r\n</table>\r\n\r\n<p>Total Hours : {{totalminutes}}</p>\r\n\r\n<button type=\"submit\" (click)=\"onSubmit()\"> submit </button> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TimeSheet } from 'src/app/time-sheet/models/timesheet';\r\nimport { TimeSheetEntry } from 'src/app/time-sheet/models/timesheetentry';\r\n\r\nimport { TimeSheetService } from 'src/app/time-sheet/services/time-sheet.service';\r\n\r\n@Component({\r\n  selector: 'app-insert-time-sheet',\r\n  templateUrl: './insert-time-sheet.component.html',\r\n  styleUrls: ['./insert-time-sheet.component.css'],\r\n})\r\nexport class InsertTimeSheetComponent implements OnInit {\r\n  constructor(private timeSheetSvc: TimeSheetService) {}\r\n\r\n  timeSheetEntries: TimeSheetEntry[] = [];\r\n\r\n  subscription: Subscription | undefined;\r\n  totalminutes: any = 0;\r\n  showaddTimesheetEntry:boolean=false;\r\n  todaysDate:string=new Date().toISOString().slice(0, 10);\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.timeSheetSvc\r\n      .ReceiveTimeSheetEntries()\r\n      .subscribe((res) => {\r\n        this.totalminutes = 0;\r\n        res\r\n          .map((r) => r.durationInMinutes)\r\n          .forEach((i) => {\r\n            this.totalminutes += i;\r\n          });\r\n        \r\n        this.showaddTimesheetEntry=false;\r\n        this.totalminutes = this.convertMinutesintoHours(this.totalminutes);\r\n\r\n        this.timeSheetEntries = res;\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.timeSheetEntries.forEach((r) => {\r\n      r.fromTime = r.fromTime + ':00';\r\n      r.toTime = r.toTime + ':00';\r\n    });\r\n\r\n    let timesheet: TimeSheet = {\r\n      id: 0,\r\n      timeSheetDate: new Date().toISOString().slice(0, 10),\r\n      status: '',\r\n      employeeId: 10,\r\n      timeSheetEntries: this.timeSheetEntries,\r\n      statusChangedDate: new Date().toISOString().slice(0, 10)\r\n    };\r\n\r\n    this.timeSheetSvc.addTimeSheet(timesheet).subscribe((res) => {\r\n      this.timeSheetEntries.forEach((r) => {\r\n        r.fromTime = r.fromTime.split(':00').at(0)!;\r\n        r.toTime = r.toTime.split(':00').at(0)!;\r\n      });\r\n      \r\n      alert('timesheet added');\r\n    });\r\n  }\r\n\r\n  convertMinutesintoHours(minutes: number) {\r\n    let str = `${(minutes / 60).toFixed(0)}h: ${minutes % 60}m`;\r\n    return str;\r\n  }\r\n\r\n  onClickAddTimesheetEntry(){\r\n    this.showaddTimesheetEntry=true;\r\n  }\r\n  onClosePopup(){\r\n    this.showaddTimesheetEntry=false;\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}