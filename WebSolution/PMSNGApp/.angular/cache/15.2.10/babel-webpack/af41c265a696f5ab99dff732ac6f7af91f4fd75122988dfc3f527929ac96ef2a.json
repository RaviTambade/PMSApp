{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProjectActivitiesComponent = class ProjectActivitiesComponent {\n  constructor(service) {\n    this.service = service;\n    this.projects = [];\n    this.activities = [];\n    this.projectId = 0;\n    this.isFalse = false;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.service.getAllProjects().subscribe(res => {\n      this.projects = res;\n      this.projectId = this.projects[0].id;\n      this.getActivitiesOfSelectedProject(this.projectId);\n    });\n  }\n  getSelectedProjectId(e) {\n    this.projectId = e.target.value;\n    console.log(this.projectId);\n    this.getActivitiesOfSelectedProject(this.projectId);\n  }\n  getActivitiesOfSelectedProject(projectId) {\n    this.service.getAllActivitiesByProject(projectId).subscribe(res => {\n      this.activities = res;\n      console.log(res);\n    });\n  }\n  showTasks(status) {\n    this.isFalse = true;\n    switch (status) {\n      case 'todo':\n        this.tasks = this.activities.filter(p => p.status.includes('todo'));\n        break;\n      case 'inprogress':\n        this.tasks = this.activities.filter(p => p.status.includes('inprogress'));\n        break;\n      case 'completed':\n        this.tasks = this.activities.filter(p => p.status.includes('completed'));\n        break;\n      default:\n        this.tasks = [];\n        break;\n    }\n  }\n};\nProjectActivitiesComponent = __decorate([Component({\n  selector: 'app-project-activities',\n  templateUrl: './project-activities.component.html',\n  styleUrls: ['./project-activities.component.css']\n})], ProjectActivitiesComponent);\nexport { ProjectActivitiesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKrCC,YAAoBC,OAAwB;IAAxB,YAAO,GAAPA,OAAO;IAJ3B,aAAQ,GAAc,EAAE;IACxB,eAAU,GAAe,EAAE;IAC3B,cAAS,GAAW,CAAC;IACrB,YAAO,GAAS,KAAK;IAyBrB,UAAK,GAAe,EAAE;EAxByB;EAE/CC,QAAQ;IACN,IAAI,CAACD,OAAO,CAACE,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC9C,IAAI,CAACC,QAAQ,GAAGD,GAAG;MACnB,IAAI,CAACE,SAAS,GAAG,IAAI,CAACD,QAAQ,CAAC,CAAC,CAAC,CAACE,EAAE;MACpC,IAAI,CAACC,8BAA8B,CAAC,IAAI,CAACF,SAAS,CAAC;IACrD,CAAC,CAAC;EACJ;EAEAG,oBAAoB,CAACC,CAAM;IACzB,IAAI,CAACJ,SAAS,GAAGI,CAAC,CAACC,MAAM,CAACC,KAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,SAAS,CAAC;IAC3B,IAAI,CAACE,8BAA8B,CAAC,IAAI,CAACF,SAAS,CAAC;EACrD;EAEAE,8BAA8B,CAACF,SAAiB;IAC9C,IAAI,CAACN,OAAO,CAACe,yBAAyB,CAACT,SAAS,CAAC,CAACH,SAAS,CAAEC,GAAG,IAAI;MAClE,IAAI,CAACY,UAAU,GAAGZ,GAAG;MAErBS,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EAIAa,SAAS,CAACC,MAAc;IACtB,IAAI,CAACC,OAAO,GAAC,IAAI;IACjB,QAAQD,MAAM;MACZ,KAAK,MAAM;QACT,IAAI,CAACE,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACK,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACJ,MAAM,CAACK,QAAQ,CAAC,MAAM,CAAC,CAAC;QACrE;MACF,KAAK,YAAY;QACf,IAAI,CAACH,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACK,MAAM,CAAEC,CAAC,IACpCA,CAAC,CAACJ,MAAM,CAACK,QAAQ,CAAC,YAAY,CAAC,CAChC;QACD;MACF,KAAK,WAAW;QACd,IAAI,CAACH,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACK,MAAM,CAAEC,CAAC,IACpCA,CAAC,CAACJ,MAAM,CAACK,QAAQ,CAAC,WAAW,CAAC,CAC/B;QACD;MACF;QACE,IAAI,CAACH,KAAK,GAAG,EAAE;QACf;IAAM;EAEZ;CACD;AApDYtB,0BAA0B,eALtCD,SAAS,CAAC;EACT2B,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,GACW5B,0BAA0B,CAoDtC;SApDYA,0BAA0B","names":["Component","ProjectActivitiesComponent","constructor","service","ngOnInit","getAllProjects","subscribe","res","projects","projectId","id","getActivitiesOfSelectedProject","getSelectedProjectId","e","target","value","console","log","getAllActivitiesByProject","activities","showTasks","status","isFalse","tasks","filter","p","includes","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\project-activities\\project-activities.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivityService } from '../../Services/activity.service';\nimport { Project } from 'src/app/projects/Models/project';\nimport { Activity } from '../../Models/Activity';\n\n@Component({\n  selector: 'app-project-activities',\n  templateUrl: './project-activities.component.html',\n  styleUrls: ['./project-activities.component.css'],\n})\nexport class ProjectActivitiesComponent implements OnInit {\n  projects: Project[] = [];\n  activities: Activity[] = [];\n  projectId: number = 0;\n  isFalse:boolean=false;\n  constructor(private service: ActivityService) {}\n\n  ngOnInit(): void {\n    this.service.getAllProjects().subscribe((res) => {\n      this.projects = res;\n      this.projectId = this.projects[0].id;\n      this.getActivitiesOfSelectedProject(this.projectId);\n    });\n  }\n\n  getSelectedProjectId(e: any) {\n    this.projectId = e.target.value;\n    console.log(this.projectId);\n    this.getActivitiesOfSelectedProject(this.projectId);\n  }\n\n  getActivitiesOfSelectedProject(projectId: number) {\n    this.service.getAllActivitiesByProject(projectId).subscribe((res) => {\n      this.activities = res;\n\n      console.log(res);\n    });\n  }\n\n  tasks: Activity[] = [];\n\n  showTasks(status: string): void {\n    this.isFalse=true;\n    switch (status) {\n      case 'todo':\n        this.tasks = this.activities.filter((p) => p.status.includes('todo'));\n        break;\n      case 'inprogress':\n        this.tasks = this.activities.filter((p) =>\n          p.status.includes('inprogress')\n        );\n        break;\n      case 'completed':\n        this.tasks = this.activities.filter((p) =>\n          p.status.includes('completed')\n        );\n        break;\n      default:\n        this.tasks = [];\n        break;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}