{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.serviceurl = \"http://localhost:5263/api/\";\n  }\n  getTaskOfMembers(projectId, memberId) {\n    let url = this.serviceurl + \"tasks/\" + projectId + \"/\" + memberId;\n    return this.httpClient.get(url);\n  }\n  getTaskDetails(taskId) {\n    let url = this.serviceurl + \"tasks/taskdetails/\" + taskId;\n    return this.httpClient.get(url);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAE9B,eAAU,GAAS,4BAA4B;EAFF;EAI7CC,gBAAgB,CAACC,SAAgB,EAACC,QAAe;IAC/C,IAAIC,GAAG,GAAG,IAAI,CAACC,UAAU,GAAC,QAAQ,GAAGH,SAAS,GAAE,GAAG,GAAEC,QAAQ;IAC7D,OAAO,IAAI,CAACH,UAAU,CAACM,GAAG,CAASF,GAAG,CAAC;EACzC;EAGAG,cAAc,CAACC,MAAa;IAC1B,IAAIJ,GAAG,GAAG,IAAI,CAACC,UAAU,GAAC,oBAAoB,GAAEG,MAAM;IACtD,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAOF,GAAG,CAAC;EACvC;EAAC;qBAfUN,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;IAAAY,YAFV;EAAM","names":["TaskService","constructor","httpClient","getTaskOfMembers","projectId","memberId","url","serviceurl","get","getTaskDetails","taskId","factory","providedIn"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\task\\Services\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { task } from '../Models/task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  serviceurl :string=\"http://localhost:5263/api/\"\r\n\r\n  getTaskOfMembers(projectId:number,memberId:number): Observable<task[]> {\r\n    let url = this.serviceurl+\"tasks/\" + projectId +\"/\"+ memberId;\r\n    return this.httpClient.get<task[]>(url);\r\n  }\r\n\r\n\r\n  getTaskDetails(taskId:number): Observable<task> {\r\n    let url = this.serviceurl+\"tasks/taskdetails/\" +taskId;\r\n    return this.httpClient.get<task>(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}