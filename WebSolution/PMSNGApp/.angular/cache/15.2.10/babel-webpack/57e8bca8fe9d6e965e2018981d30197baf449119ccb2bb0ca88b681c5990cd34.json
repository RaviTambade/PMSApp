{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/projects.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AssignEmployeeToProjectComponent {\n  constructor(service) {\n    this.service = service;\n    this.projectAllocations = {\n      Id: 0,\n      employeeId: 0,\n      projectId: 0,\n      membership: '',\n      assignDate: '',\n      status: ''\n    };\n    this.assignemployeeform = new FormGroup({\n      employeeId: new FormControl(),\n      projectId: new FormControl(),\n      membership: new FormControl(),\n      assignDate: new FormControl(),\n      status: new FormControl()\n    });\n  }\n  onSubmit() {\n    this.projectAllocations.employeeId = this.assignemployeeform.get(\"employeeId\")?.value;\n    this.projectAllocations.projectId = this.assignemployeeform.get(\"projectId\")?.value;\n    this.projectAllocations.membership = this.assignemployeeform.get(\"membership\")?.value;\n    this.projectAllocations.assignDate = this.assignemployeeform.get(\"assignDate\")?.value;\n    this.projectAllocations.status = this.assignemployeeform.get(\"status\")?.value;\n    // this.activity.assignedBy=1;\n    // this.activity.startDate=\"2023-12-28\"\n    this.projectAllocations.employeeId = 1;\n    this.projectAllocations.projectId = 2;\n    this.projectAllocations.status = \"yes\";\n    // this.activity.status=\"todo\"\n    console.log(this.projectAllocations);\n    this.service.assignedEmployeeToProject(this.projectAllocations.projectId, this.projectAllocations.employeeId, this.projectAllocations).subscribe(res => {});\n    console.log(this.assignemployeeform.value);\n  }\n  static #_ = this.ɵfac = function AssignEmployeeToProjectComponent_Factory(t) {\n    return new (t || AssignEmployeeToProjectComponent)(i0.ɵɵdirectiveInject(i1.ProjectsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AssignEmployeeToProjectComponent,\n    selectors: [[\"app-assign-employee-to-project\"]],\n    decls: 24,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"membership\"], [\"type\", \"text\", \"id\", \"membership\", \"name\", \"membership\", \"formControlName\", \"membership\"], [\"for\", \"projectId\"], [\"type\", \"text\", \"id\", \"projectId\", \"name\", \"projectId\", \"formControlName\", \"projectId\"], [\"for\", \"employeeId\"], [\"type\", \"text\", \"id\", \"employeeId\", \"name\", \"employeeId\", \"formControlName\", \"employeeId\"], [\"for\", \"status\"], [\"type\", \"text\", \"id\", \"status\", \"name\", \"status\", \"formControlName\", \"status\"], [\"for\", \"assignDate\"], [\"type\", \"text\", \"id\", \"assignDate\", \"name\", \"assignDate\", \"formControlName\", \"assignDate\"], [\"type\", \"submit\"]],\n    template: function AssignEmployeeToProjectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AssignEmployeeToProjectComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Membership\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Project Id:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n        i0.ɵɵtext(11, \"EmployeeId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n        i0.ɵɵtext(15, \"status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"label\", 9);\n        i0.ɵɵtext(19, \"Assign Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\")(22, \"button\", 11);\n        i0.ɵɵtext(23, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.assignemployeeform);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;AAOvD,OAAM,MAAOC,gCAAgC;EAE5CC,YAAoBC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;IAC1B,uBAAkB,GAAmB;MACnCC,EAAE,EAAE,CAAC;MACLC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;KACT;IACF,uBAAkB,GAAC,IAAIT,SAAS,CAAC;MAChCK,UAAU,EAAC,IAAIN,WAAW,EAAE;MAC5BO,SAAS,EAAC,IAAIP,WAAW,EAAE;MAC3BQ,UAAU,EAAE,IAAIR,WAAW,EAAE;MAC7BS,UAAU,EAAC,IAAIT,WAAW,EAAE;MAC5BU,MAAM,EAAC,IAAIV,WAAW;KACvB,CAAC;EAf4C;EAiB9CW,QAAQ;IAEN,IAAI,CAACC,kBAAkB,CAACN,UAAU,GAAC,IAAI,CAACO,kBAAkB,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEC,KAAK;IACnF,IAAI,CAACH,kBAAkB,CAACL,SAAS,GAAC,IAAI,CAACM,kBAAkB,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEC,KAAK;IACjF,IAAI,CAACH,kBAAkB,CAACJ,UAAU,GAAC,IAAI,CAACK,kBAAkB,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEC,KAAK;IACnF,IAAI,CAACH,kBAAkB,CAACH,UAAU,GAAC,IAAI,CAACI,kBAAkB,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEC,KAAK;IACnF,IAAI,CAACH,kBAAkB,CAACF,MAAM,GAAC,IAAI,CAACG,kBAAkB,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAEC,KAAK;IAG3E;IAEA;IACA,IAAI,CAACH,kBAAkB,CAACN,UAAU,GAAC,CAAC;IACpC,IAAI,CAACM,kBAAkB,CAACL,SAAS,GAAC,CAAC;IACnC,IAAI,CAACK,kBAAkB,CAACF,MAAM,GAAC,KAAK;IACpC;IACAM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,kBAAkB,CAAC;IACrC,IAAI,CAACR,OAAO,CAACc,yBAAyB,CAAC,IAAI,CAACN,kBAAkB,CAACL,SAAS,EAAC,IAAI,CAACK,kBAAkB,CAACN,UAAU,EAAC,IAAI,CAACM,kBAAkB,CAAC,CAACO,SAAS,CAAEC,GAAG,IAAG,CACtJ,CAAC,CAAC;IACFJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,kBAAkB,CAACE,KAAK,CAAC;EAC3C;EAAC;qBAvCYb,gCAAgC;EAAA;EAAA;UAAhCA,gCAAgC;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCV7CC,+BAA+D;QAAxBA;UAAA,OAAYC,cAAU;QAAA,EAAC;QAE1DD,2BAAK;QACuBA,0BAAU;QAAAA,iBAAQ;QAC1CA,2BAAkF;QACpFA,iBAAM;QACRA,2BAAK;QACsBA,2BAAW;QAAAA,iBAAQ;QAC1CA,2BAA+E;QACjFA,iBAAM;QACRA,2BAAK;QACuBA,2BAAU;QAAAA,iBAAQ;QAC1CA,4BAAkF;QACpFA,iBAAM;QACVA,4BAAK;QACmBA,uBAAM;QAAAA,iBAAQ;QAClCA,4BAAsE;QACxEA,iBAAM;QACNA,4BAAK;QACuBA,4BAAW;QAAAA,iBAAQ;QAC3CA,6BAAkF;QACpFA,iBAAM;QACNA,4BAAK;QACmBA,uBAAM;QAAAA,iBAAS;;;QAvBvCA,kDAAgC","names":["FormControl","FormGroup","AssignEmployeeToProjectComponent","constructor","service","Id","employeeId","projectId","membership","assignDate","status","onSubmit","projectAllocations","assignemployeeform","get","value","console","log","assignedEmployeeToProject","subscribe","res","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\projects\\Components\\assign-employee-to-project\\assign-employee-to-project.component.ts","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\projects\\Components\\assign-employee-to-project\\assign-employee-to-project.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ProjectsService } from '../../Services/projects.service';\r\nimport { ProjectAllocation } from '../../Models/projectallocation';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-assign-employee-to-project',\r\n  templateUrl: './assign-employee-to-project.component.html',\r\n  styleUrls: ['./assign-employee-to-project.component.css']\r\n})\r\nexport class AssignEmployeeToProjectComponent {\r\n\r\n constructor(private service:ProjectsService){}\r\n  projectAllocations:ProjectAllocation={\r\n    Id: 0,\r\n    employeeId: 0,\r\n    projectId: 0,\r\n    membership: '',\r\n    assignDate: '',\r\n    status: ''\r\n  }\r\n assignemployeeform=new FormGroup({\r\n  employeeId:new FormControl(),\r\n  projectId:new FormControl(),\r\n  membership :new FormControl(),\r\n  assignDate:new FormControl(),\r\n  status:new FormControl(),\r\n});\r\n\r\nonSubmit(){\r\n\r\n  this.projectAllocations.employeeId=this.assignemployeeform.get(\"employeeId\")?.value;\r\n  this.projectAllocations.projectId=this.assignemployeeform.get(\"projectId\")?.value;\r\n  this.projectAllocations.membership=this.assignemployeeform.get(\"membership\")?.value;\r\n  this.projectAllocations.assignDate=this.assignemployeeform.get(\"assignDate\")?.value;\r\n  this.projectAllocations.status=this.assignemployeeform.get(\"status\")?.value;\r\n  \r\n\r\n  // this.activity.assignedBy=1;\r\n \r\n  // this.activity.startDate=\"2023-12-28\"\r\n  this.projectAllocations.employeeId=1;\r\n  this.projectAllocations.projectId=2;\r\n  this.projectAllocations.status=\"yes\";\r\n  // this.activity.status=\"todo\"\r\n  console.log(this.projectAllocations);\r\n this.service.assignedEmployeeToProject(this.projectAllocations.projectId,this.projectAllocations.employeeId,this.projectAllocations).subscribe((res)=>{\r\n });\r\n console.log(this.assignemployeeform.value)\r\n}\r\n\r\n\r\n  // assignedEmployeeToProject(projectId:number,employeeId:number,project:ProjectAllocation):Observable<ProjectAllocation>{\r\n  \r\n\r\n\r\n\r\n}\r\n","<form [formGroup]=\"assignemployeeform\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    <div>\r\n        <label for=\"membership\">Membership</label>\r\n        <input type=\"text\" id=\"membership\" name=\"membership\" formControlName=\"membership\">\r\n      </div>\r\n    <div>\r\n        <label for=\"projectId\">Project Id:</label>\r\n        <input type=\"text\" id=\"projectId\" name=\"projectId\" formControlName=\"projectId\">\r\n      </div>\r\n    <div>\r\n        <label for=\"employeeId\">EmployeeId</label>\r\n        <input type=\"text\" id=\"employeeId\" name=\"employeeId\" formControlName=\"employeeId\">\r\n      </div>\r\n  <div>\r\n      <label for=\"status\">status</label>\r\n      <input type=\"text\" id=\"status\" name=\"status\" formControlName=\"status\">\r\n    </div>\r\n    <div>\r\n        <label for=\"assignDate\">Assign Date</label>\r\n        <input type=\"text\" id=\"assignDate\" name=\"assignDate\" formControlName=\"assignDate\">\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Submit</button>\r\n      </div>\r\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}