{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/time-sheet/services/time-sheet.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../insert-time-sheet-entry/insert-time-sheet-entry.component\";\nimport * as i4 from \"../../popup/popup.component\";\nfunction InsertTimeSheetComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-insert-time-sheet-entry\", 6);\n    i0.ɵɵlistener(\"stateChangeEvent\", function InsertTimeSheetComponent_ng_template_0_Template_app_insert_time_sheet_entry_stateChangeEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onAddStateChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"timeSheetId\", ctx_r1.timeSheetId);\n  }\n}\nfunction InsertTimeSheetComponent_app_popup_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-popup\", 7);\n    i0.ɵɵlistener(\"closePopup\", function InsertTimeSheetComponent_app_popup_4_Template_app_popup_closePopup_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onClosePopup());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"templateToRender\", _r0);\n  }\n}\nfunction InsertTimeSheetComponent_tbody_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const timeSheetEntry_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r8.workCategory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r8.work);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r8.fromTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r8.toTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r8.durationInHours);\n  }\n}\nexport class InsertTimeSheetComponent {\n  constructor(timeSheetSvc) {\n    this.timeSheetSvc = timeSheetSvc;\n    this.timeSheetEntries = [];\n    this.totalminutes = 0;\n    this.showaddTimesheetEntry = false;\n    this.todaysDate = new Date().toISOString().slice(0, 10);\n    this.employeeId = 10;\n  }\n  ngOnInit() {\n    this.timeSheetSvc.getTimeSheetId(this.employeeId, this.todaysDate).subscribe(res => {\n      this.timeSheetId = res;\n      this.fetchTimeSheetEntries(this.timeSheetId);\n    });\n  }\n  onSubmit() {\n    let timesheet = {\n      id: this.timeSheetId,\n      timeSheetDate: this.todaysDate,\n      status: 'Submitted',\n      employeeId: 10,\n      timeSheetEntries: this.timeSheetEntries,\n      statusChangedDate: this.todaysDate\n    };\n    this.timeSheetSvc.changeTimeSheetStatus(this.timeSheetId, timesheet).subscribe(res => {\n      alert('timesheet added');\n    });\n  }\n  onClickAddTimesheetEntry() {\n    this.showaddTimesheetEntry = true;\n  }\n  onClosePopup() {\n    this.showaddTimesheetEntry = false;\n  }\n  fetchTimeSheetEntries(timeSheetId) {\n    this.timeSheetSvc.getTimeSheetDetails(timeSheetId).subscribe(res => {\n      this.totalminutes = 0;\n      this.timeSheetEntries = res;\n      this.timeSheetEntries.forEach(entry => {\n        this.getDuration(entry);\n        this.totalminutes += entry.durationInMinutes;\n      });\n      this.totalminutes = this.convertMinutesintoHours(this.totalminutes);\n      console.log(res);\n    });\n  }\n  onAddStateChange(isupdated) {\n    if (isupdated) {\n      this.fetchTimeSheetEntries(this.timeSheetId);\n    }\n    this.showaddTimesheetEntry = false;\n  }\n  getDuration(timeSheetEntry) {\n    let startTime = timeSheetEntry.fromTime;\n    let endTime = timeSheetEntry.toTime;\n    console.log(endTime);\n    if (startTime != '' && endTime != '') {\n      const startDate = new Date(`1970-01-01T${startTime}`);\n      const endDate = new Date(`1970-01-01T${endTime}`);\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\n      timeSheetEntry.durationInMinutes = durationMilliseconds / (1000 * 60);\n      timeSheetEntry.durationInHours = this.convertMinutesintoHours(timeSheetEntry.durationInMinutes);\n    }\n  }\n  convertMinutesintoHours(minutes) {\n    let str = `${Math.floor(minutes / 60)}h: ${minutes % 60}m`;\n    return str;\n  }\n  static #_ = this.ɵfac = function InsertTimeSheetComponent_Factory(t) {\n    return new (t || InsertTimeSheetComponent)(i0.ɵɵdirectiveInject(i1.TimeSheetService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InsertTimeSheetComponent,\n    selectors: [[\"app-insert-time-sheet\"]],\n    decls: 28,\n    vars: 4,\n    consts: [[\"insertTimesheetEnrty\", \"\"], [3, \"click\"], [3, \"templateToRender\", \"closePopup\", 4, \"ngIf\"], [1, \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"click\"], [3, \"timeSheetId\", \"stateChangeEvent\"], [3, \"templateToRender\", \"closePopup\"]],\n    template: function InsertTimeSheetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, InsertTimeSheetComponent_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function InsertTimeSheetComponent_Template_button_click_2_listener() {\n          return ctx.onClickAddTimesheetEntry();\n        });\n        i0.ɵɵtext(3, \" Add \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, InsertTimeSheetComponent_app_popup_4_Template, 1, 1, \"app-popup\", 2);\n        i0.ɵɵelement(5, \"br\")(6, \"br\")(7, \"br\");\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"table\", 3)(11, \"thead\")(12, \"tr\")(13, \"th\");\n        i0.ɵɵtext(14, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"work\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"StartTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"EndTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22, \"Duration\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(23, InsertTimeSheetComponent_tbody_23_Template, 12, 5, \"tbody\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function InsertTimeSheetComponent_Template_button_click_26_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(27, \" submit \");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showaddTimesheetEntry);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" Date : \", ctx.todaysDate, \"\");\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.timeSheetEntries);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total Hours : \", ctx.totalminutes, \"\");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.InsertTimeSheetEntryComponent, i4.PopupComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","InsertTimeSheetComponent","constructor","timeSheetSvc","Date","toISOString","slice","ngOnInit","getTimeSheetId","employeeId","todaysDate","subscribe","res","timeSheetId","fetchTimeSheetEntries","onSubmit","timesheet","id","timeSheetDate","status","timeSheetEntries","statusChangedDate","changeTimeSheetStatus","alert","onClickAddTimesheetEntry","showaddTimesheetEntry","onClosePopup","getTimeSheetDetails","totalminutes","forEach","entry","getDuration","durationInMinutes","convertMinutesintoHours","console","log","onAddStateChange","isupdated","timeSheetEntry","startTime","fromTime","endTime","toTime","startDate","endDate","durationMilliseconds","getTime","durationInHours","minutes","str","Math","floor","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\insert-time-sheet\\insert-time-sheet.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\insert-time-sheet\\insert-time-sheet.component.ts"],"sourcesContent":["<ng-template #insertTimesheetEnrty>\r\n    <app-insert-time-sheet-entry [timeSheetId]=\"timeSheetId\" (stateChangeEvent)=\"onAddStateChange($event)\"></app-insert-time-sheet-entry>\r\n</ng-template>\r\n\r\n<button (click)=\"onClickAddTimesheetEntry()\"> Add </button>\r\n<app-popup *ngIf=\"showaddTimesheetEntry\" [templateToRender]=\"insertTimesheetEnrty\"\r\n    (closePopup)=\"onClosePopup()\"></app-popup>\r\n\r\n<br><br><br>\r\n<p> Date : {{todaysDate}}</p>\r\n\r\n<table class=\"table-bordered\">\r\n    <thead>\r\n        <tr>\r\n\r\n            <th>Category</th>\r\n            <th>work</th>\r\n            <th>StartTime</th>\r\n            <th>EndTime</th>\r\n            <th>Duration</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody *ngFor=\"let timeSheetEntry of timeSheetEntries\">\r\n        <tr>\r\n            <td>{{timeSheetEntry.workCategory }}</td>\r\n            <td>{{timeSheetEntry.work }}</td>\r\n            <td>{{timeSheetEntry.fromTime }}</td>\r\n            <td>{{timeSheetEntry.toTime}}</td>\r\n            <td>{{timeSheetEntry.durationInHours}}</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n\r\n</table>\r\n\r\n<p>Total Hours : {{totalminutes}}</p>\r\n\r\n<button type=\"submit\" (click)=\"onSubmit()\"> submit </button>","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TimeSheet } from 'src/app/time-sheet/models/timesheet';\r\nimport { TimeSheetEntry } from 'src/app/time-sheet/models/timesheetentry';\r\n\r\nimport { TimeSheetService } from 'src/app/time-sheet/services/time-sheet.service';\r\n\r\n@Component({\r\n  selector: 'app-insert-time-sheet',\r\n  templateUrl: './insert-time-sheet.component.html',\r\n  styleUrls: ['./insert-time-sheet.component.css'],\r\n})\r\nexport class InsertTimeSheetComponent implements OnInit {\r\n  timeSheetId!: number;\r\n  timeSheetEntries: TimeSheetEntry[] = [];\r\n  totalminutes: any = 0;\r\n  showaddTimesheetEntry: boolean = false;\r\n  todaysDate: string = new Date().toISOString().slice(0, 10);\r\n  employeeId = 10;\r\n\r\n  constructor(private timeSheetSvc: TimeSheetService) {}\r\n  ngOnInit(): void {\r\n\r\n    this.timeSheetSvc\r\n      .getTimeSheetId(this.employeeId, this.todaysDate)\r\n      .subscribe((res) => {\r\n        this.timeSheetId = res;\r\n        this.fetchTimeSheetEntries(this.timeSheetId);\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    let timesheet: TimeSheet = {\r\n      id: this.timeSheetId,\r\n      timeSheetDate: this.todaysDate,\r\n      status: 'Submitted',\r\n      employeeId: 10,\r\n      timeSheetEntries: this.timeSheetEntries,\r\n      statusChangedDate: this.todaysDate,\r\n    };\r\n\r\n    this.timeSheetSvc\r\n      .changeTimeSheetStatus(this.timeSheetId, timesheet)\r\n      .subscribe((res) => {\r\n        alert('timesheet added');\r\n      });\r\n  }\r\n\r\n  onClickAddTimesheetEntry() {\r\n    this.showaddTimesheetEntry = true;\r\n  }\r\n  onClosePopup() {\r\n    this.showaddTimesheetEntry = false;\r\n  }\r\n\r\n  fetchTimeSheetEntries(timeSheetId: number) {\r\n    this.timeSheetSvc.getTimeSheetDetails(timeSheetId).subscribe((res) => {\r\n      this.totalminutes = 0;\r\n      this.timeSheetEntries = res;\r\n      this.timeSheetEntries.forEach((entry) => {\r\n        this.getDuration(entry);\r\n        this.totalminutes += entry.durationInMinutes;\r\n      });\r\n      this.totalminutes = this.convertMinutesintoHours(this.totalminutes);\r\n\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  onAddStateChange(isupdated: boolean) {\r\n    if (isupdated) {\r\n      this.fetchTimeSheetEntries(this.timeSheetId);\r\n    }\r\n    this.showaddTimesheetEntry = false;\r\n  }\r\n\r\n  getDuration(timeSheetEntry: TimeSheetEntry) {\r\n    let startTime = timeSheetEntry.fromTime;\r\n    let endTime = timeSheetEntry.toTime;\r\n    console.log(endTime);\r\n    if (startTime != '' && endTime != '') {\r\n      const startDate = new Date(`1970-01-01T${startTime}`);\r\n      const endDate = new Date(`1970-01-01T${endTime}`);\r\n\r\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\r\n      timeSheetEntry.durationInMinutes = durationMilliseconds / (1000 * 60);\r\n      timeSheetEntry.durationInHours = this.convertMinutesintoHours(\r\n        timeSheetEntry.durationInMinutes\r\n      );\r\n    }\r\n  }\r\n  convertMinutesintoHours(minutes: number) {\r\n    let str = `${Math.floor(minutes / 60)}h: ${minutes % 60}m`;\r\n    return str;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}