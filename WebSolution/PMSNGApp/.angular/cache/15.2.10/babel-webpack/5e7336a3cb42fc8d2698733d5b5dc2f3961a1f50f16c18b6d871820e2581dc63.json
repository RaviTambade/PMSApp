{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/time-sheet/services/time-sheet.service\";\nimport * as i2 from \"@angular/common\";\nfunction ApproveTimesheetComponent_tbody_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const timeSheetEntry_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r1.workCategory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r1.work);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r1.fromTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r1.toTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(timeSheetEntry_r1.durationInHours);\n  }\n}\nexport class ApproveTimesheetComponent {\n  constructor(timeSheetSvc) {\n    this.timeSheetSvc = timeSheetSvc;\n    this.totalminutes = 0;\n    this.showaddTimesheetEntry = false;\n    this.showupdateTimesheetEntry = false;\n    this.todaysDate = new Date().toISOString().slice(0, 10);\n    this.employeeId = 10;\n  }\n  ngOnInit() {\n    this.fetchTimeSheetEntries(this.employeeId, this.todaysDate);\n  }\n  onApprove() {\n    if (this.timeSheet) {\n      let timesheet = {\n        id: this.timeSheet.id,\n        timeSheetDate: this.timeSheet.timeSheetDate,\n        status: 'approved',\n        employeeId: this.timeSheet.employeeId,\n        timeSheetEntries: this.timeSheet.timeSheetEntries,\n        statusChangedDate: this.todaysDate\n      };\n      this.timeSheetSvc.changeTimeSheetStatus(timesheet.id, timesheet).subscribe(res => {\n        if (res) {\n          alert('status  updated');\n          if (this.timeSheet) this.timeSheet.status = 'approved';\n        }\n      });\n    }\n  }\n  onReject() {\n    if (this.timeSheet) {\n      let timesheet = {\n        id: this.timeSheet.id,\n        timeSheetDate: this.timeSheet.timeSheetDate,\n        status: 'rejected',\n        employeeId: this.timeSheet.employeeId,\n        timeSheetEntries: this.timeSheet.timeSheetEntries,\n        statusChangedDate: this.todaysDate\n      };\n      this.timeSheetSvc.changeTimeSheetStatus(this.timeSheet.id, timesheet).subscribe(res => {\n        if (res) {\n          alert('status  updated');\n          if (this.timeSheet) this.timeSheet.status = 'rejected';\n        }\n      });\n    }\n  }\n  fetchTimeSheetEntries(employeeId, date) {\n    this.timeSheetSvc.getTimeSheet(employeeId, date).subscribe(res => {\n      this.totalminutes = 0;\n      this.timeSheet = res;\n      this.timeSheet.timeSheetEntries.forEach(entry => {\n        entry = this.timeSheetSvc.getDurationOfWork(entry);\n        this.totalminutes += entry.durationInMinutes;\n      });\n      this.totalminutes = this.timeSheetSvc.convertMinutesintoHours(this.totalminutes);\n      console.log(res);\n    });\n  }\n  static #_ = this.ɵfac = function ApproveTimesheetComponent_Factory(t) {\n    return new (t || ApproveTimesheetComponent)(i0.ɵɵdirectiveInject(i1.TimeSheetService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ApproveTimesheetComponent,\n    selectors: [[\"app-approve-timesheet\"]],\n    decls: 28,\n    vars: 9,\n    consts: [[1, \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mx-1\", 3, \"click\"]],\n    template: function ApproveTimesheetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"titlecase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"table\", 0)(9, \"thead\")(10, \"tr\")(11, \"th\");\n        i0.ɵɵtext(12, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"work\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"StartTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"EndTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"Duration\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(21, ApproveTimesheetComponent_tbody_21_Template, 12, 5, \"tbody\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ApproveTimesheetComponent_Template_button_click_24_listener() {\n          return ctx.onApprove();\n        });\n        i0.ɵɵtext(25, \" Approve \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ApproveTimesheetComponent_Template_button_click_26_listener() {\n          return ctx.onReject();\n        });\n        i0.ɵɵtext(27, \"Reject \");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" Date : \", i0.ɵɵpipeBind1(2, 5, ctx.timeSheet == null ? null : ctx.timeSheet.timeSheetDate), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Status:\", i0.ɵɵpipeBind1(5, 7, ctx.timeSheet == null ? null : ctx.timeSheet.status), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Employee Name:\", ctx.timeSheet == null ? null : ctx.timeSheet.employeeName, \"\");\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.timeSheet == null ? null : ctx.timeSheet.timeSheetEntries);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total Hours : \", ctx.totalminutes, \"\");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.TitleCasePipe, i2.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ApproveTimesheetComponent","constructor","timeSheetSvc","Date","toISOString","slice","ngOnInit","fetchTimeSheetEntries","employeeId","todaysDate","onApprove","timeSheet","timesheet","id","timeSheetDate","status","timeSheetEntries","statusChangedDate","changeTimeSheetStatus","subscribe","res","alert","onReject","date","getTimeSheet","totalminutes","forEach","entry","getDurationOfWork","durationInMinutes","convertMinutesintoHours","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\approve-timesheet\\approve-timesheet.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\approve-timesheet\\approve-timesheet.component.ts"],"sourcesContent":["<p> Date : {{timeSheet?.timeSheetDate |date}}</p>\r\n<p> Status:{{timeSheet?.status |titlecase}}</p>\r\n<p> Employee Name:{{timeSheet?.employeeName}}</p>\r\n\r\n<table class=\"table-bordered\">\r\n    <thead>\r\n        <tr>\r\n            <th>Category</th>\r\n            <th>work</th>\r\n            <th>StartTime</th>\r\n            <th>EndTime</th>\r\n            <th>Duration</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody *ngFor=\"let timeSheetEntry of timeSheet?.timeSheetEntries\">\r\n        <tr>\r\n            <td>{{timeSheetEntry.workCategory }}</td>\r\n            <td>{{timeSheetEntry.work }}</td>\r\n            <td>{{timeSheetEntry.fromTime }}</td>\r\n            <td>{{timeSheetEntry.toTime}}</td>\r\n            <td>{{timeSheetEntry.durationInHours}}</td>\r\n        </tr>\r\n\r\n    </tbody>\r\n\r\n</table>\r\n\r\n<p>Total Hours : {{totalminutes}}</p>\r\n\r\n<button class=\"mx-1\" (click)=\"onApprove()\"> Approve </button>\r\n<button class=\"mx-1\" (click)=\"onReject()\">Reject </button>","import { Component } from '@angular/core';\r\nimport { TimeSheet } from 'src/app/time-sheet/models/timesheet';\r\nimport { TimesheetEmployee } from 'src/app/time-sheet/models/timesheet-employee';\r\nimport { TimeSheetEntry } from 'src/app/time-sheet/models/timesheetentry';\r\nimport { TimeSheetService } from 'src/app/time-sheet/services/time-sheet.service';\r\n\r\n@Component({\r\n  selector: 'app-approve-timesheet',\r\n  templateUrl: './approve-timesheet.component.html',\r\n  styleUrls: ['./approve-timesheet.component.css'],\r\n})\r\nexport class ApproveTimesheetComponent {\r\n  totalminutes: any = 0;\r\n  showaddTimesheetEntry: boolean = false;\r\n  showupdateTimesheetEntry: boolean = false;\r\n  todaysDate: string = new Date().toISOString().slice(0, 10);\r\n  employeeId = 10;\r\n  timeSheet: TimesheetEmployee | undefined;\r\n  selectedTimeSheetEntrytoUpdate: TimeSheetEntry | undefined;\r\n\r\n  constructor(private timeSheetSvc: TimeSheetService) {}\r\n  ngOnInit(): void {\r\n    this.fetchTimeSheetEntries(this.employeeId, this.todaysDate);\r\n  }\r\n\r\n  onApprove() {\r\n    if (this.timeSheet) {\r\n      let timesheet: TimeSheet = {\r\n        id: this.timeSheet.id,\r\n        timeSheetDate: this.timeSheet.timeSheetDate,\r\n        status: 'approved',\r\n        employeeId: this.timeSheet.employeeId,\r\n        timeSheetEntries: this.timeSheet.timeSheetEntries,\r\n        statusChangedDate: this.todaysDate,\r\n      };\r\n\r\n      this.timeSheetSvc\r\n        .changeTimeSheetStatus(timesheet.id, timesheet)\r\n        .subscribe((res) => {\r\n          if (res) {\r\n            alert('status  updated');\r\n            if (this.timeSheet) this.timeSheet.status = 'approved';\r\n          }\r\n        });\r\n    }\r\n  }\r\n  onReject() {\r\n    if (this.timeSheet) {\r\n      let timesheet: TimeSheet = {\r\n        id: this.timeSheet.id,\r\n        timeSheetDate: this.timeSheet.timeSheetDate,\r\n        status: 'rejected',\r\n        employeeId: this.timeSheet.employeeId,\r\n        timeSheetEntries: this.timeSheet.timeSheetEntries,\r\n        statusChangedDate: this.todaysDate,\r\n      };\r\n\r\n      this.timeSheetSvc\r\n        .changeTimeSheetStatus(this.timeSheet.id, timesheet)\r\n        .subscribe((res) => {\r\n          if (res) {\r\n            alert('status  updated');\r\n            if (this.timeSheet) this.timeSheet.status = 'rejected';\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  fetchTimeSheetEntries(employeeId: number, date: string) {\r\n    this.timeSheetSvc.getTimeSheet(employeeId, date).subscribe((res) => {\r\n      this.totalminutes = 0;\r\n      this.timeSheet = res;\r\n\r\n      this.timeSheet.timeSheetEntries.forEach((entry) => {\r\n        entry = this.timeSheetSvc.getDurationOfWork(entry);\r\n        this.totalminutes += entry.durationInMinutes;\r\n      });\r\n      this.totalminutes = this.timeSheetSvc.convertMinutesintoHours(\r\n        this.totalminutes\r\n      );\r\n\r\n      console.log(res);\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}