{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/time-sheet/services/time-sheet.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction InsertTimeSheetEntryComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", activity_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, activity_r1));\n  }\n}\nexport class InsertTimeSheetEntryComponent {\n  constructor(timeSheetService) {\n    this.timeSheetService = timeSheetService;\n    this.activitiyTypes = [\"task\", \"userstory\", \"bug\", \"issues\", \"meeting\", \"learning\", \"mentoring\", \"break\", \"clientcall\", \"other\"];\n    this.timeSheetEntry = {\n      id: 0,\n      fromTime: '',\n      toTime: '',\n      durationInMinutes: 0,\n      durationInHours: '',\n      timeSheetId: 0,\n      work: '',\n      workCategory: '',\n      description: ''\n    };\n  }\n  onClick() {\n    let timeSheetEntry = {\n      id: 0,\n      fromTime: this.timeSheetEntry.fromTime,\n      toTime: this.timeSheetEntry.toTime,\n      durationInMinutes: this.timeSheetEntry.durationInMinutes,\n      durationInHours: this.timeSheetEntry.durationInHours,\n      timeSheetId: 0,\n      work: this.timeSheetEntry.work,\n      workCategory: this.timeSheetEntry.workCategory,\n      description: this.timeSheetEntry.description\n    };\n    this.timeSheetService.AddTimeSheetEntries(timeSheetEntry);\n  }\n  getDuration() {\n    let startTime = this.timeSheetEntry.fromTime;\n    let endTime = this.timeSheetEntry.toTime;\n    console.log(endTime);\n    if (startTime != '' && endTime != '') {\n      const startDate = new Date(`1970-01-01T${startTime}`);\n      const endDate = new Date(`1970-01-01T${endTime}`);\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\n      this.timeSheetEntry.durationInMinutes = durationMilliseconds / (1000 * 60);\n      this.timeSheetEntry.durationInHours = this.convertMinutesintoHours(this.timeSheetEntry.durationInMinutes);\n    }\n  }\n  convertMinutesintoHours(minutes) {\n    let str = `${(minutes / 60).toFixed(0)}h: ${minutes % 60}m`;\n    return str;\n  }\n  static #_ = this.ɵfac = function InsertTimeSheetEntryComponent_Factory(t) {\n    return new (t || InsertTimeSheetEntryComponent)(i0.ɵɵdirectiveInject(i1.TimeSheetService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InsertTimeSheetEntryComponent,\n    selectors: [[\"app-insert-time-sheet-entry\"]],\n    decls: 27,\n    vars: 7,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\", \"id\", \"\", \"cols\", \"30\", \"rows\", \"1\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"time\", \"name\", \"fromTime\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"time\", \"name\", \"toTime\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"submit\", 3, \"click\"], [3, \"value\"]],\n    template: function InsertTimeSheetEntryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"label\");\n        i0.ɵɵtext(1, \"Activity:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function InsertTimeSheetEntryComponent_Template_select_ngModelChange_2_listener($event) {\n          return ctx.timeSheetEntry.workCategory = $event;\n        });\n        i0.ɵɵtemplate(3, InsertTimeSheetEntryComponent_option_3_Template, 3, 4, \"option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"label\");\n        i0.ɵɵtext(6, \"Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function InsertTimeSheetEntryComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.timeSheetEntry.work = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\")(9, \"br\");\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"textarea\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function InsertTimeSheetEntryComponent_Template_textarea_ngModelChange_12_listener($event) {\n          return ctx.timeSheetEntry.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"label\");\n        i0.ɵɵtext(15, \"From :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function InsertTimeSheetEntryComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.timeSheetEntry.fromTime = $event;\n        })(\"change\", function InsertTimeSheetEntryComponent_Template_input_change_16_listener() {\n          return ctx.getDuration();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\");\n        i0.ɵɵtext(18, \"TO:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function InsertTimeSheetEntryComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.timeSheetEntry.toTime = $event;\n        })(\"change\", function InsertTimeSheetEntryComponent_Template_input_change_19_listener() {\n          return ctx.getDuration();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\")(21, \"br\");\n        i0.ɵɵelementStart(22, \"p\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"br\");\n        i0.ɵɵelementStart(25, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function InsertTimeSheetEntryComponent_Template_button_click_25_listener() {\n          return ctx.onClick();\n        });\n        i0.ɵɵtext(26, \"Add\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.workCategory);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.activitiyTypes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.work);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.fromTime);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.timeSheetEntry.toTime);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"duration:\", ctx.timeSheetEntry.durationInHours, \"\");\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i2.TitleCasePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","InsertTimeSheetEntryComponent","constructor","timeSheetService","id","fromTime","toTime","durationInMinutes","durationInHours","timeSheetId","work","workCategory","description","onClick","timeSheetEntry","AddTimeSheetEntries","getDuration","startTime","endTime","console","log","startDate","Date","endDate","durationMilliseconds","getTime","convertMinutesintoHours","minutes","str","toFixed","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\insert-time-sheet-entry\\insert-time-sheet-entry.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\components\\forms\\insert-time-sheet-entry\\insert-time-sheet-entry.component.ts"],"sourcesContent":["<label>Activity:</label>\r\n<select [(ngModel)]=\"timeSheetEntry.workCategory\">\r\n    <option *ngFor=\"let activity of activitiyTypes;let i=index\" [value]=\"activity\">{{activity |titlecase}}</option>\r\n</select><br>\r\n<label>Title:</label>\r\n<input type=\"text\" [(ngModel)]=\"timeSheetEntry.work\"> <br /><br>\r\n\r\n<label>Description:</label>\r\n<textarea name=\"\" id=\"\" cols=\"30\" rows=\"1\" [(ngModel)]=\"timeSheetEntry.description\"></textarea><br>\r\n<label>From :</label>\r\n<input type=\"time\" name=\"fromTime\" [(ngModel)]=\"timeSheetEntry.fromTime\" (change)=\"getDuration()\">\r\n<label>TO:</label>\r\n<input type=\"time\" name=\"toTime\" [(ngModel)]=\"timeSheetEntry.toTime\" (change)=\"getDuration()\"> <br /> <br />\r\n\r\n\r\n<p>duration:{{timeSheetEntry.durationInHours}}</p>\r\n<br>\r\n<button type=\"submit\" (click)=\"onClick()\">Add</button>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { TimeSheetEntry } from 'src/app/time-sheet/models/timesheetentry';\r\nimport { TimeSheetService } from 'src/app/time-sheet/services/time-sheet.service';\r\n\r\n@Component({\r\n  selector: 'app-insert-time-sheet-entry',\r\n  templateUrl: './insert-time-sheet-entry.component.html',\r\n  styleUrls: ['./insert-time-sheet-entry.component.css'],\r\n})\r\nexport class InsertTimeSheetEntryComponent {\r\n  activitiyTypes:string[]=[\"task\",\"userstory\",\"bug\",\"issues\",\"meeting\",\"learning\",\"mentoring\",\"break\",\"clientcall\",\"other\"];\r\n  timeSheetEntry: TimeSheetEntry = {\r\n    id: 0,\r\n    fromTime: '',\r\n    toTime: '',\r\n    durationInMinutes: 0,\r\n    durationInHours: '',\r\n    timeSheetId: 0,\r\n    work: '',\r\n    workCategory: '',\r\n    description: ''\r\n  };\r\n\r\n  constructor(private timeSheetService: TimeSheetService) {}\r\n\r\n  \r\n  onClick() {\r\n    let timeSheetEntry: TimeSheetEntry = {\r\n      id: 0,\r\n      fromTime: this.timeSheetEntry.fromTime,\r\n      toTime: this.timeSheetEntry.toTime,\r\n      durationInMinutes: this.timeSheetEntry.durationInMinutes,\r\n      durationInHours: this.timeSheetEntry.durationInHours,\r\n      timeSheetId: 0,\r\n      work: this.timeSheetEntry.work,\r\n      workCategory: this.timeSheetEntry.workCategory,\r\n      description: this.timeSheetEntry.description\r\n    };\r\n\r\n    this.timeSheetService.AddTimeSheetEntries(timeSheetEntry);\r\n  \r\n  }\r\n\r\n  getDuration() {\r\n    let startTime = this.timeSheetEntry.fromTime;\r\n    let endTime = this.timeSheetEntry.toTime;\r\n    console.log(endTime);\r\n    if (startTime != '' && endTime != ''   ) {\r\n      const startDate = new Date(`1970-01-01T${startTime}`);\r\n      const endDate = new Date(`1970-01-01T${endTime}`);\r\n\r\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\r\n      this.timeSheetEntry.durationInMinutes = (durationMilliseconds /(1000*60));\r\n      this.timeSheetEntry.durationInHours=this.convertMinutesintoHours(this.timeSheetEntry.durationInMinutes);\r\n    }\r\n  }\r\n\r\n  convertMinutesintoHours(minutes:number){\r\n    let str=`${(minutes/60).toFixed(0)}h: ${(minutes%60)}m`;\r\n    return str;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}