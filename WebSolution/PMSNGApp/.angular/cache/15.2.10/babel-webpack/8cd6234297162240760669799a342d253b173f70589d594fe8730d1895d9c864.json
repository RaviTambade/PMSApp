{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ActivityService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.serviceurl = environment.apiUrl;\n  }\n  getAllActivities(projectId, assignedTo) {\n    let url = this.serviceurl + \"/workmgmt/activities/activity\" + \"/\" + projectId + \"/\" + assignedTo;\n    console.log(url);\n    return this.httpClient.get(url);\n  }\n  getEmployeeDetails(employeeId) {\n    let url = this.serviceurl + \"/hr/employees/employee\" + \"/\" + employeeId;\n    console.log(url);\n    return this.httpClient.get(url);\n  }\n  getProjectDetails(projectId) {\n    let url = this.serviceurl + \"/projectmgmt/projects\" + \"/\" + projectId;\n    console.log(url);\n    return this.httpClient.get(url);\n  }\n  addActivity(addactivity) {\n    let url = this.serviceurl + \"/workmgmt/activities/insert\";\n    console.log(\"service called\");\n    return this.httpClient.post(url, addactivity);\n  }\n  getAllProject() {\n    let url = this.serviceurl + \"/projectmgmt/projects\";\n    return this.httpClient.get(url);\n  }\n  // http://localhost:5263/api/projectmgmt/projectallocation/employees/1\n  getAllEmployees(projectId) {\n    let url = this.serviceurl + \"/projectmgmt/projectallocation/employees/\" + projectId;\n    return this.httpClient.get(url);\n  }\n  // http://localhost:5263/api/workmgmt/activities/activity/todo/4/15\n  getAllNotStartedActivities(projectId, employeeId) {\n    let url = this.serviceurl + \"/workmgmt/activities/activity/todo/\" + projectId + \"/\" + employeeId;\n    return this.httpClient.get(url);\n  }\n  // http://localhost:5263/api/workmgmt/activities/Update/1/4/15\n  updateActivity(status, activityId, projectId, employeeId) {\n    let url = this.serviceurl + \"/workmgmt/activities/activity/Update/\" + status + \"/\" + activityId + \"/\" + projectId + \"/\" + employeeId;\n    return this.httpClient.put(url, activity);\n  }\n  static #_ = this.ɵfac = function ActivityService_Factory(t) {\n    return new (t || ActivityService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ActivityService,\n    factory: ActivityService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAGxB,eAAU,GAASH,WAAW,CAACI,MAAM;EAHE;EAK/CC,gBAAgB,CAACC,SAAgB,EAACC,UAAiB;IACjD,IAAIC,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,+BAA+B,GAAC,GAAG,GAACH,SAAS,GAAC,GAAG,GAACC,UAAU;IACpFG,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,OAAO,IAAI,CAACL,UAAU,CAACS,GAAG,CAAaJ,GAAG,CAAC;EAC7C;EAEAK,kBAAkB,CAACC,UAAiB;IAClC,IAAIN,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,wBAAwB,GAAC,GAAG,GAACK,UAAU;IAC/DJ,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,OAAO,IAAI,CAACL,UAAU,CAACS,GAAG,CAAWJ,GAAG,CAAC;EAC3C;EAEAO,iBAAiB,CAACT,SAAgB;IAChC,IAAIE,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,uBAAuB,GAAC,GAAG,GAACH,SAAS;IAC7DI,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,OAAO,IAAI,CAACL,UAAU,CAACS,GAAG,CAAMJ,GAAG,CAAC;EACtC;EAGAQ,WAAW,CAACC,WAAoB;IAC9B,IAAIT,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,6BAA6B;IACrDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,OAAO,IAAI,CAACR,UAAU,CAACe,IAAI,CAAUV,GAAG,EAACS,WAAW,CAAC;EACvD;EAGAE,aAAa;IACX,IAAIX,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,uBAAuB;IAC/C,OAAO,IAAI,CAACN,UAAU,CAACS,GAAG,CAAYJ,GAAG,CAAC;EAC5C;EAIA;EAIAY,eAAe,CAACd,SAAgB;IAC9B,IAAIE,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,2CAA2C,GAACH,SAAS;IAC7E,OAAO,IAAI,CAACH,UAAU,CAACS,GAAG,CAAQJ,GAAG,CAAC;EACxC;EAGA;EAEAa,0BAA0B,CAACf,SAAgB,EAACQ,UAAiB;IAC3D,IAAIN,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,qCAAqC,GAACH,SAAS,GAAC,GAAG,GAACQ,UAAU;IACtF,OAAO,IAAI,CAACX,UAAU,CAACS,GAAG,CAAaJ,GAAG,CAAC;EAC7C;EAIA;EAEAc,cAAc,CAACC,MAAa,EAACC,UAAiB,EAAClB,SAAgB,EAACQ,UAAiB;IAC/E,IAAIN,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,uCAAuC,GAACc,MAAM,GAAC,GAAG,GAACC,UAAU,GAAC,GAAG,GAAClB,SAAS,GAAC,GAAG,GAACQ,UAAU;IAClH,OAAO,IAAI,CAACX,UAAU,CAACsB,GAAG,CAAUjB,GAAG,EAACkB,QAAQ,CAAC;EACnD;EAAC;qBAhEYzB,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAA0B,SAAf1B,eAAe;IAAA2B,YAFd;EAAM","names":["environment","ActivityService","constructor","httpClient","apiUrl","getAllActivities","projectId","assignedTo","url","serviceurl","console","log","get","getEmployeeDetails","employeeId","getProjectDetails","addActivity","addactivity","post","getAllProject","getAllEmployees","getAllNotStartedActivities","updateActivity","status","activityId","put","activity","factory","providedIn"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Services\\activity.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Activity } from '../Models/Activity';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Employee } from '../Models/Employee';\r\nimport { Project } from 'src/app/projects/Models/project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActivityService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n\r\nprivate serviceurl :string=environment.apiUrl;\r\n\r\ngetAllActivities(projectId:number,assignedTo:number):Observable<Activity[]>{\r\n  let url=this.serviceurl+\"/workmgmt/activities/activity\"+\"/\"+projectId+\"/\"+assignedTo;\r\n  console.log(url);\r\n  return this.httpClient.get<Activity[]>(url);\r\n}\r\n\r\ngetEmployeeDetails(employeeId:number):Observable<Employee>{\r\n  let url=this.serviceurl+\"/hr/employees/employee\"+\"/\"+employeeId;\r\n  console.log(url);\r\n  return this.httpClient.get<Employee>(url);\r\n}\r\n\r\ngetProjectDetails(projectId:number):Observable<any>{\r\n  let url=this.serviceurl+\"/projectmgmt/projects\"+\"/\"+projectId;\r\n  console.log(url);\r\n  return this.httpClient.get<any>(url);\r\n}\r\n\r\n\r\naddActivity(addactivity:Activity):Observable<boolean>{\r\n  let url=this.serviceurl+\"/workmgmt/activities/insert\";\r\n  console.log(\"service called\");\r\n  return this.httpClient.post<boolean>(url,addactivity);\r\n}\r\n\r\n\r\ngetAllProject():Observable<Project[]>{\r\n  let url=this.serviceurl+\"/projectmgmt/projects\";\r\n  return this.httpClient.get<Project[]>(url);\r\n}\r\n\r\n\r\n\r\n// http://localhost:5263/api/projectmgmt/projectallocation/employees/1\r\n\r\n\r\n\r\ngetAllEmployees(projectId:number):Observable<any[]>{\r\n  let url=this.serviceurl+\"/projectmgmt/projectallocation/employees/\"+projectId;\r\n  return this.httpClient.get<any[]>(url);\r\n}\r\n\r\n\r\n// http://localhost:5263/api/workmgmt/activities/activity/todo/4/15\r\n\r\ngetAllNotStartedActivities(projectId:number,employeeId:number):Observable<Activity[]>{\r\n  let url=this.serviceurl+\"/workmgmt/activities/activity/todo/\"+projectId+\"/\"+employeeId;\r\n  return this.httpClient.get<Activity[]>(url);\r\n}\r\n\r\n\r\n\r\n// http://localhost:5263/api/workmgmt/activities/Update/1/4/15\r\n\r\nupdateActivity(status:string,activityId:number,projectId:number,employeeId:number):Observable<boolean>{\r\n  let url=this.serviceurl+\"/workmgmt/activities/activity/Update/\"+status+\"/\"+activityId+\"/\"+projectId+\"/\"+employeeId;\r\n  return this.httpClient.put<boolean>(url,activity);\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}