{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/activity/Services/activity.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UpdateActivityComponent_tbody_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 5);\n    i0.ɵɵlistener(\"click\", function UpdateActivityComponent_tbody_21_Template_td_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const activity_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onChange(activity_r2));\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const activity_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 7, activity_r2.assignDate), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(activity_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", activity_r2.status, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r2.projectName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r2.activityType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r2.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 9, activity_r2.dueDate));\n  }\n}\nfunction UpdateActivityComponent_form_22_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r7.title);\n  }\n}\nfunction UpdateActivityComponent_form_22_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r8.employeeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(employee_r8.fullName);\n  }\n}\nfunction UpdateActivityComponent_form_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function UpdateActivityComponent_form_22_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.update());\n    });\n    i0.ɵɵelementStart(1, \"div\")(2, \"label\", 7);\n    i0.ɵɵtext(3, \"Project Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 8);\n    i0.ɵɵtemplate(5, UpdateActivityComponent_form_22_option_5_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\")(7, \"label\", 10);\n    i0.ɵɵtext(8, \"Assign Employee:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 11);\n    i0.ɵɵtemplate(10, UpdateActivityComponent_form_22_option_10_Template, 2, 2, \"option\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"label\", 12);\n    i0.ɵɵtext(13, \"Activity Title:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\")(16, \"label\", 14);\n    i0.ɵɵtext(17, \"Activity Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"select\", 15)(19, \"option\", 16);\n    i0.ɵɵtext(20, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"option\", 17);\n    i0.ɵɵtext(22, \"User Story\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(23, \"div\")(24, \"label\", 18);\n    i0.ɵɵtext(25, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\")(28, \"label\", 20);\n    i0.ɵɵtext(29, \"Assign Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\")(32, \"label\", 22);\n    i0.ɵɵtext(33, \"Due Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\")(36, \"button\", 24);\n    i0.ɵɵtext(37, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.activityform);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.projects);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.employees);\n  }\n}\nexport class UpdateActivityComponent {\n  constructor(service) {\n    this.service = service;\n    this.projectId = 4;\n    this.employeeId = 15;\n    this.activityId = 0;\n    this.isFalse = false;\n    this.activity = {\n      id: 0,\n      title: '',\n      description: '',\n      activityType: '',\n      projectId: 0,\n      projectName: 0,\n      assignedBy: 0,\n      assignedTo: 0,\n      assignDate: '',\n      startDate: '',\n      dueDate: '',\n      status: ''\n    };\n    this.activities = [];\n  }\n  ngOnInit() {\n    this.service.getAllNotStartedActivities(this.projectId, this.employeeId).subscribe(res => {\n      this.activities = res;\n      console.log(res);\n    });\n  }\n  onChange(activity) {\n    this.activityId = activity.id;\n    this.isFalse = true;\n    console.log(activity.id);\n  }\n  update() {\n    console.log(\"hii\" + this.activity);\n    this.service.updateActivity(this.activity, this.activityId, this.projectId, this.employeeId).subscribe(res => {\n      console.log(\"hello\" + res);\n    });\n  }\n  static #_ = this.ɵfac = function UpdateActivityComponent_Factory(t) {\n    return new (t || UpdateActivityComponent)(i0.ɵɵdirectiveInject(i1.ActivityService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateActivityComponent,\n    selectors: [[\"app-update-activity\"]],\n    decls: 23,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"card\"], [1, \"table-bordered\", \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"click\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"projectid\"], [\"id\", \"projectid\", \"name\", \"projectid\", \"formControlName\", \"projectid\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"assignedto\"], [\"id\", \"assignedto\", \"name\", \"assignedto\", \"formControlName\", \"assignedto\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"formControlName\", \"title\"], [\"for\", \"activitytype\"], [\"id\", \"activitytype\", \"name\", \"activitytype\", \"formControlName\", \"activitytype\"], [\"value\", \"task\"], [\"value\", \"userstory\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"formControlName\", \"description\"], [\"for\", \"assigndate\"], [\"type\", \"date\", \"id\", \"assigndate\", \"name\", \"assigndate\", \"formControlName\", \"assigndate\"], [\"for\", \"duedate\"], [\"type\", \"date\", \"id\", \"duedate\", \"name\", \"duedate\", \"formControlName\", \"duedate\", \"placeholder\", \"yy-mm-dd\"], [\"type\", \"submit\"], [3, \"value\"]],\n    template: function UpdateActivityComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \" Not Started Activities\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"table\", 2)(5, \"thead\")(6, \"tr\")(7, \"th\");\n        i0.ɵɵtext(8, \"AssignedDate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"ActivityTitle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"ProjectName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"ActivityType\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"DueDate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(21, UpdateActivityComponent_tbody_21_Template, 18, 11, \"tbody\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(22, UpdateActivityComponent_form_22_Template, 38, 3, \"form\", 4);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.activities);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isFalse);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i2.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAgBYA,6BAA2C;IAE9BA,YAA6B;;IAAAA,iBAAK;IACvCA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,6BAAiC;IAA7BA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAAEA,YAAmB;IAAAA,iBAAK;IAC1DA,0BAAI;IAAAA,aAAwB;IAAAA,iBAAK;IACjCA,2BAAI;IAAAA,aAAyB;IAAAA,iBAAK;IAClCA,2BAAI;IAAAA,aAAwB;IAAAA,iBAAK;IACjCA,2BAAI;IAAAA,aAAyB;;IAAAA,iBAAK;;;;IAN7BA,eAA6B;IAA7BA,4EAA6B;IAC9BA,eAAkB;IAAlBA,uCAAkB;IACYA,eAAmB;IAAnBA,kDAAmB;IACjDA,eAAwB;IAAxBA,6CAAwB;IACxBA,eAAyB;IAAzBA,8CAAyB;IACzBA,eAAwB;IAAxBA,6CAAwB;IACxBA,eAAyB;IAAzBA,gEAAyB;;;;;IAerCA,kCAA8D;IAAAA,YAAiB;IAAAA,iBAAS;;;;IAA/CA,qCAAoB;IAACA,eAAiB;IAAjBA,sCAAiB;;;;;IAM/EA,kCAAyE;IAAAA,YAAqB;IAAAA,iBAAS;;;;IAA5DA,8CAA6B;IAACA,eAAqB;IAArBA,0CAAqB;;;;;;IAXtGA,+BAAuE;IAAtCA;MAAAA;MAAA;MAAA,OAAYA,8BAAQ;IAAA,EAAC;IAElDA,2BAAK;IACoBA,6BAAa;IAAAA,iBAAQ;IAC5CA,iCAAoE;IAClEA,sFAAwF;IAC1FA,iBAAS;IAEXA,2BAAK;IACqBA,gCAAgB;IAAAA,iBAAQ;IAChDA,kCAAuE;IACrEA,wFAAuG;IACzGA,iBAAS;IAEbA,4BAAK;IACkBA,gCAAe;IAAAA,iBAAQ;IAC1CA,6BAAmE;IACrEA,iBAAM;IAENA,4BAAK;IACuBA,+BAAc;IAAAA,iBAAQ;IAChDA,mCAA6E;IACtDA,qBAAI;IAAAA,iBAAS;IAClCA,mCAA0B;IAAAA,2BAAU;IAAAA,iBAAS;IAIjDA,4BAAK;IACsBA,6BAAY;IAAAA,iBAAQ;IAC7CA,6BAAqF;IACvFA,iBAAM;IAENA,4BAAK;IACqBA,6BAAY;IAAAA,iBAAQ;IAC5CA,6BAAkF;IAEpFA,iBAAM;IAENA,4BAAK;IACkBA,0BAAS;IAAAA,iBAAQ;IACtCA,6BAAgG;IAClGA,iBAAM;IAENA,4BAAK;IACmBA,uBAAM;IAAAA,iBAAS;;;;IA5CrCA,+CAA0B;IAKIA,eAAW;IAAXA,yCAAW;IAMVA,eAAY;IAAZA,0CAAY;;;ACpCrD,OAAM,MAAOC,uBAAuB;EAClCC,YAAoBC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;IAC3B,cAAS,GAAQ,CAAC;IAClB,eAAU,GAAQ,EAAE;IACpB,eAAU,GAAQ,CAAC;IACnB,YAAO,GAAY,KAAK;IACxB,aAAQ,GAAU;MAChBC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;KACT;IACD,eAAU,GAAY,EAAE;EAnBqB;EAoB7CC,QAAQ;IACP,IAAI,CAACb,OAAO,CAACc,0BAA0B,CAAC,IAAI,CAACT,SAAS,EAAC,IAAI,CAACU,UAAU,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAG;MACxF,IAAI,CAACC,UAAU,GAACD,GAAG;MACnBE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IACjB,CAAC,CAAC;EACH;EAGAI,QAAQ,CAACC,QAAiB;IAGzB,IAAI,CAACC,UAAU,GAACD,QAAQ,CAACrB,EAAE;IAE3B,IAAI,CAACuB,OAAO,GAAC,IAAI;IAElBL,OAAO,CAACC,GAAG,CAACE,QAAQ,CAACrB,EAAE,CAAC;EACvB;EAEHwB,MAAM;IACHN,OAAO,CAACC,GAAG,CAAC,KAAK,GAAC,IAAI,CAACE,QAAQ,CAAC;IACjC,IAAI,CAACtB,OAAO,CAAC0B,cAAc,CAAC,IAAI,CAACJ,QAAQ,EAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAAClB,SAAS,EAAC,IAAI,CAACU,UAAU,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAG;MACzGE,OAAO,CAACC,GAAG,CAAC,OAAO,GAACH,GAAG,CAAC;IACzB,CAAC,CAAC;EACL;EAAC;qBA5CYnB,uBAAuB;EAAA;EAAA;UAAvBA,uBAAuB;IAAA6B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDTpClC,8BAAuB;QACdA,uCAAsB;QAAAA,iBAAK;QAChCA,8BAAkB;QAIEA,4BAAY;QAAAA,iBAAK;QACrBA,0BAAI;QAAAA,8BAAa;QAAAA,iBAAK;QACtBA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QACfA,2BAAI;QAAAA,4BAAW;QAAAA,iBAAK;QACpBA,2BAAI;QAAAA,6BAAY;QAAAA,iBAAK;QACrBA,2BAAI;QAAAA,4BAAW;QAAAA,iBAAK;QACpBA,2BAAI;QAAAA,wBAAO;QAAAA,iBAAK;QAIxBA,gFAWQ;QACZA,iBAAQ;QAMZA,6EA+CS;QAjFbA,iBAAuB;;;QAgBiBA,gBAAa;QAAbA,wCAAa;QAkBOA,eAAa;QAAbA,kCAAa","names":["i0","UpdateActivityComponent","constructor","service","id","title","description","activityType","projectId","projectName","assignedBy","assignedTo","assignDate","startDate","dueDate","status","ngOnInit","getAllNotStartedActivities","employeeId","subscribe","res","activities","console","log","onChange","activity","activityId","isFalse","update","updateActivity","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\Forms\\update-activity\\update-activity.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\Forms\\update-activity\\update-activity.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h2> Not Started Activities</h2>\n    <div class=\"card\">\n        <table class=\"table-bordered text-center\">\n            <thead>\n                <tr>\n                    <th>AssignedDate</th>\n                    <th>ActivityTitle</th>\n                    <th>Status</th>\n                    <th>ProjectName</th>\n                    <th>ActivityType</th>\n                    <th>Description</th>\n                    <th>DueDate</th>\n                    <!-- <th>AssignedBy</th> -->\n                   </tr>\n            </thead>\n            <tbody *ngFor=\"let activity of activities\">\n                <tr>\n                    <td> {{activity.assignDate |date}}</td>\n                    <td>{{activity.title}}</td>\n                    <td (click)=\"onChange(activity)\"> {{activity.status}}</td>\n                    <td>{{activity.projectName}}</td>\n                    <td>{{activity.activityType}}</td>\n                    <td>{{activity.description}}</td>\n                    <td>{{activity.dueDate|date}}</td>\n                    <!-- <td><a href=\"#\">{{employee?.firstName}} {{employee?.lastName}}</a></td> -->\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n\n\n\n    <form [formGroup]=\"activityform\" (ngSubmit)=\"update()\" *ngIf=\"isFalse\">\n\n        <div>\n          <label for=\"projectid\">Project Name:</label>\n          <select id=\"projectid\" name=\"projectid\" formControlName=\"projectid\">\n            <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{project.title}}</option>\n          </select>\n        </div>\n        <div>\n          <label for=\"assignedto\">Assign Employee:</label>\n          <select id=\"assignedto\" name=\"assignedto\" formControlName=\"assignedto\">\n            <option *ngFor=\"let employee of employees\" [value]=\"employee.employeeId\">{{employee.fullName}}</option>\n          </select>\n        </div>\n      <div>\n          <label for=\"title\">Activity Title:</label>\n          <input type=\"text\" id=\"title\" name=\"title\" formControlName=\"title\">\n        </div>\n      \n        <div>\n          <label for=\"activitytype\">Activity Type:</label>\n          <select id=\"activitytype\" name=\"activitytype\" formControlName=\"activitytype\">\n            <option value=\"task\">Task</option>\n            <option value=\"userstory\">User Story</option>\n          </select>\n        </div>\n      \n        <div>\n          <label for=\"description\">Description:</label>\n          <input type=\"text\" id=\"description\" name=\"description\" formControlName=\"description\">\n        </div>\n      \n        <div>\n          <label for=\"assigndate\">Assign Date:</label>\n          <input type=\"date\" id=\"assigndate\" name=\"assigndate\" formControlName=\"assigndate\">\n          <!-- <input type=\"datetime\" data-date=\"\" data-date-format=\"yy-mm-dd\" > -->\n        </div>\n      \n        <div>\n          <label for=\"duedate\">Due Date:</label>\n          <input type=\"date\" id=\"duedate\" name=\"duedate\" formControlName=\"duedate\" placeholder=\"yy-mm-dd\">\n        </div>\n      \n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      \n      </form>","import { Component, OnInit } from '@angular/core';\nimport { Activity } from 'src/app/activity/Models/Activity';\nimport { ActivityService } from 'src/app/activity/Services/activity.service';\n\n@Component({\n  selector: 'app-update-activity',\n  templateUrl: './update-activity.component.html',\n  styleUrls: ['./update-activity.component.css']\n})\nexport class UpdateActivityComponent implements OnInit{\n  constructor(private service:ActivityService){}\n  projectId:number=4\n  employeeId:number=15\n  activityId:number=0;\n  isFalse: boolean = false;\n  activity:Activity={\n    id: 0,\n    title: '',\n    description: '',\n    activityType: '',\n    projectId: 0,\n    projectName: 0,\n    assignedBy: 0,\n    assignedTo: 0,\n    assignDate: '',\n    startDate: '',\n    dueDate: '',\n    status: ''\n  };\n  activities:Activity[]=[];\n  ngOnInit(): void {\n   this.service.getAllNotStartedActivities(this.projectId,this.employeeId).subscribe((res)=>{\n    this.activities=res;\n    console.log(res);\n   })\n  }\n\n\n  onChange(activity:Activity){\n\n \n   this.activityId=activity.id;\n     \n   this.isFalse=true;\n  \n  console.log(activity.id);\n   }\n\nupdate(){\n   console.log(\"hii\"+this.activity);\n  this.service.updateActivity(this.activity,this.activityId,this.projectId,this.employeeId).subscribe((res)=>{\n    console.log(\"hello\"+res)\n   })\n}\n   \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}