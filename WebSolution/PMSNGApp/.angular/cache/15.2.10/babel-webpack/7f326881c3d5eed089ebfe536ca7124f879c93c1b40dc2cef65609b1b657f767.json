{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/activity.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ProjectActivitiesComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r2.title);\n  }\n}\nfunction ProjectActivitiesComponent_tr_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const activity_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.activityType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.assignDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.assignedBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.assignedTo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.dueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r3.status);\n  }\n}\nexport class ProjectActivitiesComponent {\n  constructor(service) {\n    this.service = service;\n    this.projects = [];\n    this.activities = [];\n    this.projectId = 0;\n    this.isFalse = false;\n    this.filteredActivities = [];\n    this.showTodoTasks = true;\n    this.showInProgressTasks = true;\n    this.showCompletedTasks = true;\n  }\n  ngOnInit() {\n    this.service.getAllProjects().subscribe(res => {\n      this.projects = res;\n      this.projectId = this.projects[0].id;\n      this.getActivitiesOfSelectedProject(this.projectId);\n    });\n  }\n  getSelectedProjectId(e) {\n    this.projectId = e.target.value;\n    console.log(this.projectId);\n    this.getActivitiesOfSelectedProject(this.projectId);\n  }\n  getActivitiesOfSelectedProject(projectId) {\n    this.service.getAllActivitiesByProject(projectId).subscribe(res => {\n      this.activities = res;\n      this.filterActivities();\n      console.log(res);\n    });\n  }\n  onTodoChange(e) {\n    if (e.target.checked) {\n      this.showTodoTasks = true;\n    } else {\n      this.showTodoTasks = false;\n    }\n    this.filterActivities();\n  }\n  OnProgressChange(e) {\n    if (e.target.checked) {\n      this.showInProgressTasks = true;\n    } else {\n      this.showInProgressTasks = false;\n    }\n    this.filterActivities();\n  }\n  OnCompletedChange(e) {\n    if (e.target.checked) {\n      this.showCompletedTasks = true;\n    } else {\n      this.showCompletedTasks = false;\n    }\n    this.filterActivities();\n  }\n  filterActivities() {\n    if (this.showTodoTasks && this.showInProgressTasks && this.showCompletedTasks) {\n      this.filteredActivities = this.activities;\n    } else if (this.showTodoTasks && this.showInProgressTasks) {\n      this.filteredActivities = this.activities.filter(item => item.status === 'todo' || item.status === 'inprogress');\n    } else if (this.showTodoTasks && this.showCompletedTasks) {\n      this.filteredActivities = this.activities.filter(item => item.status === 'todo' || item.status === 'completed');\n    } else if (this.showInProgressTasks && this.showCompletedTasks) {\n      this.filteredActivities = this.activities.filter(item => item.status === 'inprogress' || item.status === 'completed');\n    } else if (this.showTodoTasks) {\n      this.filteredActivities = this.activities.filter(item => item.status === 'todo');\n    } else if (this.showInProgressTasks) {\n      this.filteredActivities = this.activities.filter(item => item.status === 'inprogress');\n    } else if (this.showCompletedTasks) {\n      this.filteredActivities = this.activities.filter(item => item.status === 'completed');\n    } else {\n      this.this.filteredActivities = [];\n    }\n  }\n  static #_ = this.ɵfac = function ProjectActivitiesComponent_Factory(t) {\n    return new (t || ProjectActivitiesComponent)(i0.ɵɵdirectiveInject(i1.ActivityService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectActivitiesComponent,\n    selectors: [[\"app-project-activities\"]],\n    decls: 37,\n    vars: 5,\n    consts: [[\"for\", \"project\"], [\"id\", \"project\", \"name\", \"project\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"table-bordered\", \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function ProjectActivitiesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 0);\n        i0.ɵɵtext(3, \"Project Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 1);\n        i0.ɵɵlistener(\"change\", function ProjectActivitiesComponent_Template_select_change_4_listener($event) {\n          return ctx.getSelectedProjectId($event);\n        });\n        i0.ɵɵtemplate(5, ProjectActivitiesComponent_option_5_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(6, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(7, \"td\")(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectActivitiesComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.showTodoTasks = $event;\n        })(\"change\", function ProjectActivitiesComponent_Template_input_change_8_listener() {\n          return ctx.filterActivities();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \" Todo \");\n        i0.ɵɵelementStart(10, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectActivitiesComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.showInProgressTasks = $event;\n        })(\"change\", function ProjectActivitiesComponent_Template_input_change_10_listener() {\n          return ctx.filterActivities();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" In Progress \");\n        i0.ɵɵelementStart(12, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectActivitiesComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.showCompletedTasks = $event;\n        })(\"change\", function ProjectActivitiesComponent_Template_input_change_12_listener() {\n          return ctx.filterActivities();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" Completed \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"table\", 4)(15, \"thead\")(16, \"tr\")(17, \"th\");\n        i0.ɵɵtext(18, \"activityType\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\");\n        i0.ɵɵtext(24, \"assignDate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"th\");\n        i0.ɵɵtext(26, \"assignedBy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\");\n        i0.ɵɵtext(28, \"assignedTo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"th\");\n        i0.ɵɵtext(30, \"startDate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"th\");\n        i0.ɵɵtext(32, \"dueDate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"th\");\n        i0.ɵɵtext(34, \"status\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"tbody\");\n        i0.ɵɵtemplate(36, ProjectActivitiesComponent_tr_36_Template, 19, 9, \"tr\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.showTodoTasks);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.showInProgressTasks);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.showCompletedTasks);\n        i0.ɵɵadvance(24);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredActivities);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ProjectActivitiesComponent","constructor","service","ngOnInit","getAllProjects","subscribe","res","projects","projectId","id","getActivitiesOfSelectedProject","getSelectedProjectId","e","target","value","console","log","getAllActivitiesByProject","activities","filterActivities","onTodoChange","checked","showTodoTasks","OnProgressChange","showInProgressTasks","OnCompletedChange","showCompletedTasks","filteredActivities","filter","item","status","this","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\project-activities\\project-activities.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\project-activities\\project-activities.component.ts"],"sourcesContent":["&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n<div>\r\n  <label for=\"project\">Project Name:</label>\r\n  <select id=\"project\" name=\"project\" (change)=\"getSelectedProjectId($event)\">\r\n    <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{project.title}}</option>\r\n  </select>\r\n</div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"checkbox-container\">\r\n  <label>\r\n    <input type=\"checkbox\" [(ngModel)]=\"showTodoTasks\"> ToDo\r\n  </label>\r\n  <label>\r\n    <input type=\"checkbox\" [(ngModel)]=\"showInProgressTasks\"> Inprogress\r\n  </label>\r\n  <label>\r\n    <input type=\"checkbox\" [(ngModel)]=\"showCompletedTasks\"> Completed\r\n  </label>\r\n</div>\r\n\r\n<div class=\"task-list\">\r\n  <div >\r\n    <div id=\"tasksContainer\">\r\n      <div class=\"container\">\r\n        <div class=\"card\">\r\n          <table class=\"table-bordered text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>activityType</th>\r\n                <th>title</th>\r\n                <th>description</th>\r\n                <th>assignDate</th>\r\n                <th>assignedBy</th>\r\n                <th>assignedTo</th>\r\n                <th>startDate</th>\r\n                <th>dueDate</th>\r\n                <th>status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let activity of todoTasks\">\r\n              <tr>\r\n                <td>{{activity.activityType}}</td>\r\n                <td>{{activity.title}}</td>\r\n                <td>{{activity.description}}</td>\r\n                <td>{{activity.assignDate}}</td>\r\n                <td>{{activity.assignedBy}}</td>\r\n                <td>{{activity.assignedTo}}</td>\r\n                <td>{{activity.startDate}}</td>\r\n                <td>{{activity.dueDate}}</td>\r\n                <td>{{activity.status}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div> \r\n    \r\n  </div>\r\n  \r\n  -->\r\n  <td>\r\n    <input type=\"checkbox\" [(ngModel)]=\"showTodoTasks\" (change)=\"filterActivities()\"> Todo\r\n    <input type=\"checkbox\" [(ngModel)]=\"showInProgressTasks\" (change)=\"filterActivities()\"> In Progress\r\n    <input type=\"checkbox\" [(ngModel)]=\"showCompletedTasks\" (change)=\"filterActivities()\"> Completed\r\n  </td>\r\n  <table class=\"table-bordered text-center\"  >\r\n    <thead>\r\n      <tr>\r\n       \r\n        <th>activityType</th>\r\n        <th>title</th>\r\n        <th>description</th>\r\n        <th>assignDate</th>\r\n        <th>assignedBy</th>\r\n        <th>assignedTo</th>\r\n        <th>startDate</th>\r\n        <th>dueDate</th>\r\n        <th>status</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let activity of filteredActivities\">\r\n       \r\n        <td>{{activity.activityType}}</td>\r\n        <td>{{activity.title}}</td>\r\n        <td>{{activity.description}}</td>\r\n        <td>{{activity.assignDate}}</td>\r\n        <td>{{activity.assignedBy}}</td>\r\n        <td>{{activity.assignedTo}}</td>\r\n        <td>{{activity.startDate}}</td>\r\n        <td>{{activity.dueDate}}</td>\r\n        <td>{{activity.status}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivityService } from '../../Services/activity.service';\r\nimport { Project } from 'src/app/projects/Models/project';\r\nimport { Activity } from '../../Models/Activity';\r\n\r\n@Component({\r\n  selector: 'app-project-activities',\r\n  templateUrl: './project-activities.component.html',\r\n  styleUrls: ['./project-activities.component.css'],\r\n})\r\nexport class ProjectActivitiesComponent implements OnInit {\r\n  projects: Project[] = [];\r\n  activities: Activity[] = [];\r\n  projectId: number = 0;\r\n  isFalse:boolean=false;\r\n  filteredActivities: Activity[]=[];\r\n\r\n  showTodoTasks: boolean = true;\r\n  showInProgressTasks: boolean = true;\r\n  showCompletedTasks: boolean = true;\r\n  \r\n  constructor(private service: ActivityService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.service.getAllProjects().subscribe((res) => {\r\n      this.projects = res;\r\n      this.projectId = this.projects[0].id;\r\n      this.getActivitiesOfSelectedProject(this.projectId);\r\n      \r\n    });\r\n  }\r\n\r\n  getSelectedProjectId(e: any) {\r\n    this.projectId = e.target.value;\r\n    console.log(this.projectId);\r\n    this.getActivitiesOfSelectedProject(this.projectId);\r\n  }\r\n\r\n  getActivitiesOfSelectedProject(projectId: number) {\r\n    this.service.getAllActivitiesByProject(projectId).subscribe((res) => {\r\n      this.activities = res;\r\n      this.filterActivities();\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n\r\n  onTodoChange(e:any):void{\r\n    if (e.target.checked) {\r\n          this.showTodoTasks=true;\r\n    }\r\n    else{\r\n      this.showTodoTasks=false;\r\n    }\r\n    this.filterActivities();\r\n  }\r\n\r\n  OnProgressChange(e:any):void{\r\n    if (e.target.checked) {\r\n          this.showInProgressTasks=true;\r\n    }\r\n    else{\r\n      this.showInProgressTasks=false;\r\n    }\r\n    this.filterActivities();\r\n  }\r\n\r\n\r\n  OnCompletedChange(e:any):void{\r\n    if (e.target.checked) {\r\n          this.showCompletedTasks=true;\r\n    }\r\n    else{\r\n      this.showCompletedTasks=false;\r\n    }\r\n    this.filterActivities();\r\n  }\r\n\r\n\r\n  filterActivities(): void {\r\n     \r\n    if(this.showTodoTasks && this.showInProgressTasks && this.showCompletedTasks){\r\n      this.filteredActivities = this.activities;\r\n    }\r\n\r\n    else if(this.showTodoTasks && this.showInProgressTasks){\r\n      this.filteredActivities = this.activities.filter(item => item.status === 'todo' || item.status==='inprogress');\r\n    }\r\n    else if(this.showTodoTasks && this.showCompletedTasks){\r\n      this.filteredActivities = this.activities.filter(item => item.status === 'todo' || item.status==='completed');\r\n    }\r\n\r\n    else if(this.showInProgressTasks && this.showCompletedTasks){\r\n      this.filteredActivities = this.activities.filter(item => item.status === 'inprogress' || item.status==='completed');\r\n    }\r\n\r\n    else if(this.showTodoTasks){\r\n      this.filteredActivities = this.activities.filter(item => item.status === 'todo');\r\n    }\r\n    else if(this.showInProgressTasks){\r\n      this.filteredActivities = this.activities.filter(item => item.status === 'inprogress');\r\n    }\r\n    else if(this.showCompletedTasks){\r\n      this.filteredActivities = this.activities.filter(item => item.status === 'completed');\r\n    }\r\n\r\n    else{\r\n      this.\r\n      this.filteredActivities=[];\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}