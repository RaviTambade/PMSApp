{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TooltipDirective {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.Tooltip = '';\n    this.tooltipElement = null;\n  }\n  onMouseEnter(event) {\n    if (this.tooltipElement == null) {\n      this.showTooltip(event);\n    }\n  }\n  onMouseMove(event) {\n    if (this.tooltipElement) {\n      this.updateTooltipPosition(event);\n    }\n  }\n  onMouseLeave() {\n    this.hideTooltip();\n  }\n  updateTooltip(tooltip) {\n    if (this.tooltipElement) this.tooltipElement.innerHTML = tooltip;\n  }\n  updateTooltipPosition(event) {\n    const xOffset = 10;\n    const yOffset = 20;\n    this.renderer.setStyle(this.tooltipElement, 'left', event.clientX + xOffset + 'px');\n    this.renderer.setStyle(this.tooltipElement, 'top', event.clientY + yOffset + 'px');\n  }\n  showTooltip(event) {\n    if (!this.tooltipElement) {\n      this.tooltipElement = document.createElement('div');\n      this.renderer.setStyle(this.tooltipElement, 'border', '1px solid');\n      this.renderer.setStyle(this.tooltipElement, 'position', 'absolute');\n      this.renderer.setStyle(this.tooltipElement, 'background-color', ' rgb(67, 59, 59)');\n      this.renderer.setStyle(this.tooltipElement, 'color', 'white');\n      this.renderer.setStyle(this.tooltipElement, 'padding', '8px');\n      this.renderer.setStyle(this.tooltipElement, 'border-radius', '4px');\n      this.renderer.setStyle(this.tooltipElement, 'z-index', '1000');\n      this.renderer.appendChild(document.body, this.tooltipElement);\n      this.updateTooltipPosition(event);\n      this.updateTooltip(this.Tooltip);\n    }\n  }\n  hideTooltip() {\n    if (this.tooltipElement) {\n      this.renderer.removeChild(document.body, this.tooltipElement);\n      this.tooltipElement = null;\n    }\n  }\n  static #_ = this.ɵfac = function TooltipDirective_Factory(t) {\n    return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TooltipDirective,\n    selectors: [[\"\", \"Tooltip\", \"\"]],\n    hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseover\", function TooltipDirective_mouseover_HostBindingHandler($event) {\n          return ctx.onMouseEnter($event);\n        })(\"mousemove\", function TooltipDirective_mousemove_HostBindingHandler($event) {\n          return ctx.onMouseMove($event);\n        })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler() {\n          return ctx.onMouseLeave();\n        });\n      }\n    },\n    inputs: {\n      Tooltip: \"Tooltip\"\n    }\n  });\n}","map":{"version":3,"mappings":";AAUA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,QAAmB;IAAnB,aAAQ,GAARA,QAAQ;IAFnB,YAAO,GAAS,EAAE;IACnB,mBAAc,GAAuB,IAAI;EACP;EAEHC,YAAY,CAACC,KAAiB;IACnE,IAAI,IAAI,CAACC,cAAc,IAAI,IAAI,EAAE;MAC/B,IAAI,CAACC,WAAW,CAACF,KAAK,CAAC;;EAE3B;EAEuCG,WAAW,CAACH,KAAiB;IAClE,IAAI,IAAI,CAACC,cAAc,EAAE;MACvB,IAAI,CAACG,qBAAqB,CAACJ,KAAK,CAAC;;EAErC;EAE4BK,YAAY;IACtC,IAAI,CAACC,WAAW,EAAE;EACpB;EAEQC,aAAa,CAACC,OAAY;IAChC,IAAI,IAAI,CAACP,cAAc,EAAE,IAAI,CAACA,cAAc,CAACQ,SAAS,GAAGD,OAAO;EAClE;EAEQJ,qBAAqB,CAACJ,KAAiB;IAC7C,MAAMU,OAAO,GAAG,EAAE;IAClB,MAAMC,OAAO,GAAG,EAAE;IAElB,IAAI,CAACb,QAAQ,CAACc,QAAQ,CACpB,IAAI,CAACX,cAAc,EACnB,MAAM,EACND,KAAK,CAACa,OAAO,GAAGH,OAAO,GAAG,IAAI,CAC/B;IACD,IAAI,CAACZ,QAAQ,CAACc,QAAQ,CACpB,IAAI,CAACX,cAAc,EACnB,KAAK,EACLD,KAAK,CAACc,OAAO,GAAGH,OAAO,GAAG,IAAI,CAC/B;EACH;EAEQT,WAAW,CAACF,KAAiB;IACnC,IAAI,CAAC,IAAI,CAACC,cAAc,EAAE;MACxB,IAAI,CAACA,cAAc,GAAGc,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACnD,IAAI,CAAClB,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAACX,cAAc,EAAE,QAAQ,EAAE,WAAW,CAAC;MAClE,IAAI,CAACH,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAACX,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC;MACnE,IAAI,CAACH,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAACX,cAAc,EAAE,kBAAkB,EAAE,kBAAkB,CAAC;MACnF,IAAI,CAACH,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAACX,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7D,IAAI,CAACH,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAACX,cAAc,EAAE,SAAS,EAAE,KAAK,CAAC;MAC7D,IAAI,CAACH,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAACX,cAAc,EAAE,eAAe,EAAE,KAAK,CAAC;MACnE,IAAI,CAACH,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAACX,cAAc,EAAE,SAAS,EAAE,MAAM,CAAC;MAC9D,IAAI,CAACH,QAAQ,CAACmB,WAAW,CAACF,QAAQ,CAACG,IAAI,EAAE,IAAI,CAACjB,cAAc,CAAC;MAC7D,IAAI,CAACG,qBAAqB,CAACJ,KAAK,CAAC;MACjC,IAAI,CAACO,aAAa,CAAC,IAAI,CAACY,OAAO,CAAC;;EAEpC;EAEQb,WAAW;IACjB,IAAI,IAAI,CAACL,cAAc,EAAE;MACvB,IAAI,CAACH,QAAQ,CAACsB,WAAW,CAACL,QAAQ,CAACG,IAAI,EAAE,IAAI,CAACjB,cAAc,CAAC;MAC7D,IAAI,CAACA,cAAc,GAAG,IAAI;;EAE9B;EAAC;qBA9DUL,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAyB;IAAAC;MAAA;;iBAAhBC,wBACb;QAAA;UAAA,OADaA,uBAAmB;QAAA;UAAA,OAAnBA,kBAAc;QAAA","names":["TooltipDirective","constructor","renderer","onMouseEnter","event","tooltipElement","showTooltip","onMouseMove","updateTooltipPosition","onMouseLeave","hideTooltip","updateTooltip","tooltip","innerHTML","xOffset","yOffset","setStyle","clientX","clientY","document","createElement","appendChild","body","Tooltip","removeChild","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\calender\\tooltip.directive.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  HostListener,\r\n  Input,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[Tooltip]',\r\n})\r\nexport class TooltipDirective {\r\n  @Input() Tooltip: string='';\r\n  private tooltipElement: HTMLElement | null = null;\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  @HostListener('mouseover', ['$event']) onMouseEnter(event: MouseEvent) {\r\n    if (this.tooltipElement == null) {\r\n      this.showTooltip(event);\r\n    }\r\n  }\r\n\r\n  @HostListener('mousemove', ['$event']) onMouseMove(event: MouseEvent) {\r\n    if (this.tooltipElement) {\r\n      this.updateTooltipPosition(event);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.hideTooltip();\r\n  }\r\n\r\n  private updateTooltip(tooltip: any) {\r\n    if (this.tooltipElement) this.tooltipElement.innerHTML = tooltip;\r\n  }\r\n\r\n  private updateTooltipPosition(event: MouseEvent) {\r\n    const xOffset = 10;\r\n    const yOffset = 20;\r\n\r\n    this.renderer.setStyle(\r\n      this.tooltipElement,\r\n      'left',\r\n      event.clientX + xOffset + 'px'\r\n    );\r\n    this.renderer.setStyle(\r\n      this.tooltipElement,\r\n      'top',\r\n      event.clientY + yOffset + 'px'\r\n    );\r\n  }\r\n\r\n  private showTooltip(event: MouseEvent) {\r\n    if (!this.tooltipElement) {\r\n      this.tooltipElement = document.createElement('div');\r\n      this.renderer.setStyle(this.tooltipElement, 'border', '1px solid');\r\n      this.renderer.setStyle(this.tooltipElement, 'position', 'absolute');\r\n      this.renderer.setStyle(this.tooltipElement, 'background-color', ' rgb(67, 59, 59)'); \r\n      this.renderer.setStyle(this.tooltipElement, 'color', 'white');\r\n      this.renderer.setStyle(this.tooltipElement, 'padding', '8px');\r\n      this.renderer.setStyle(this.tooltipElement, 'border-radius', '4px');\r\n      this.renderer.setStyle(this.tooltipElement, 'z-index', '1000');\r\n      this.renderer.appendChild(document.body, this.tooltipElement);\r\n      this.updateTooltipPosition(event);\r\n      this.updateTooltip(this.Tooltip);\r\n    }\r\n  }\r\n\r\n  private hideTooltip() {\r\n    if (this.tooltipElement) {\r\n      this.renderer.removeChild(document.body, this.tooltipElement);\r\n      this.tooltipElement = null;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}