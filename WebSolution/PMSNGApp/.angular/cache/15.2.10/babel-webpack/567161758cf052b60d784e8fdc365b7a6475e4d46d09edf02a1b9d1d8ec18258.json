{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TimeSheetService {\n  constructor(http) {\n    this.http = http;\n    this.timeSheetUrl = 'http://localhost:5263/api/workmgmt/timesheets';\n  }\n  getTimeSheetsOfEmployee(employeeId) {\n    let url = `${this.timeSheetUrl}/${employeeId}`;\n    return this.http.get(url);\n  }\n  getTimeSheetEntries(timeSheetId) {\n    let url = `${this.timeSheetUrl}/timesheetentries/${timeSheetId}`;\n    return this.http.get(url);\n  }\n  addTimeSheetEntry(timesheetEntry) {\n    let url = `${this.timeSheetUrl}/timesheetentries`;\n    return this.http.post(url, timesheetEntry);\n  }\n  getTimeSheet(employeeId, date) {\n    let url = `${this.timeSheetUrl}/${employeeId}/date/${date}`;\n    return this.http.get(url);\n  }\n  insertTimeSheet(employeeId, date) {\n    let url = `${this.timeSheetUrl}/${employeeId}/${date}`;\n    return this.http.get(url);\n  }\n  changeTimeSheetStatus(timeSheetId, timesheet) {\n    let url = `${this.timeSheetUrl}/${timeSheetId}`;\n    return this.http.put(url, timesheet);\n  }\n  updateTimeSheetEntry(timeSheetEntryId, timeSheetEntry) {\n    let url = `${this.timeSheetUrl}/timesheetentries/${timeSheetEntryId}`;\n    return this.http.put(url, timeSheetEntry);\n  }\n  removeTimeSheetEntry(timeSheetEntryId) {\n    let url = `${this.timeSheetUrl}/timesheetentries/remove/${timeSheetEntryId}`;\n    return this.http.delete(url);\n  }\n  removeAllTimeSheetEntries(timeSheetId) {\n    let url = `${this.timeSheetUrl}/timesheetentries/removeall/${timeSheetId}`;\n    return this.http.delete(url);\n  }\n  //helper functions\n  getDurationOfWork(timeSheetEntry) {\n    let startTime = timeSheetEntry.fromTime;\n    let endTime = timeSheetEntry.toTime;\n    if (startTime != '' && endTime != '') {\n      const startDate = new Date(`1970-01-01T${startTime}`);\n      const endDate = new Date(`1970-01-01T${endTime}`);\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\n      timeSheetEntry.durationInMinutes = durationMilliseconds / (1000 * 60);\n      timeSheetEntry.durationInHours = this.convertMinutesintoHours(timeSheetEntry.durationInMinutes);\n    }\n    return timeSheetEntry;\n  }\n  convertMinutesintoHours(minutes) {\n    let str = `${Math.floor(minutes / 60)}h: ${minutes % 60}m`;\n    return str;\n  }\n  getTotalDurationOfEmployee(employeeId, fromDate, toDate) {\n    let url = `${this.timeSheetUrl}/timesheetentries/duration/workcategory/${employeeId}/${fromDate}/${toDate}`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function TimeSheetService_Factory(t) {\n    return new (t || TimeSheetService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TimeSheetService,\n    factory: TimeSheetService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["TimeSheetService","constructor","http","getTimeSheetsOfEmployee","employeeId","url","timeSheetUrl","get","getTimeSheetEntries","timeSheetId","addTimeSheetEntry","timesheetEntry","post","getTimeSheet","date","insertTimeSheet","changeTimeSheetStatus","timesheet","put","updateTimeSheetEntry","timeSheetEntryId","timeSheetEntry","removeTimeSheetEntry","delete","removeAllTimeSheetEntries","getDurationOfWork","startTime","fromTime","endTime","toTime","startDate","Date","endDate","durationMilliseconds","getTime","durationInMinutes","durationInHours","convertMinutesintoHours","minutes","str","Math","floor","getTotalDurationOfEmployee","fromDate","toDate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\time-sheet\\services\\time-sheet.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\nimport { TimesheetEmployee } from '../models/timesheet-employee';\r\nimport { TimeSheet } from '../models/timesheet';\r\nimport { TimeSheetEntry } from '../models/timesheetentry';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TimeSheetService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private timeSheetUrl: string =\r\n    'http://localhost:5263/api/workmgmt/timesheets';\r\n\r\n  getTimeSheetsOfEmployee(employeeId: number): Observable<TimeSheet[]> {\r\n    let url = `${this.timeSheetUrl}/${employeeId}`;\r\n    return this.http.get<TimeSheet[]>(url);\r\n  }\r\n\r\n  getTimeSheetEntries(timeSheetId: number): Observable<TimeSheetEntry[]> {\r\n    let url = `${this.timeSheetUrl}/timesheetentries/${timeSheetId}`;\r\n    return this.http.get<TimeSheetEntry[]>(url);\r\n  }\r\n\r\n  addTimeSheetEntry(timesheetEntry: TimeSheetEntry): Observable<any> {\r\n    let url = `${this.timeSheetUrl}/timesheetentries`;\r\n    return this.http.post(url, timesheetEntry);\r\n  }\r\n\r\n  getTimeSheet(\r\n    employeeId: number,\r\n    date: string\r\n  ): Observable<TimesheetEmployee> {\r\n    let url = `${this.timeSheetUrl}/${employeeId}/date/${date}`;\r\n    return this.http.get<TimesheetEmployee>(url);\r\n  }\r\n\r\n  insertTimeSheet(employeeId: number, date: string): Observable<boolean> {\r\n    let url = `${this.timeSheetUrl}/${employeeId}/${date}`;\r\n    return this.http.get<boolean>(url);\r\n  }\r\n\r\n  changeTimeSheetStatus(\r\n    timeSheetId: number,\r\n    timesheet: TimeSheet\r\n  ): Observable<boolean> {\r\n    let url = `${this.timeSheetUrl}/${timeSheetId}`;\r\n    return this.http.put<boolean>(url, timesheet);\r\n  }\r\n\r\n  updateTimeSheetEntry(\r\n    timeSheetEntryId: number,\r\n    timeSheetEntry: TimeSheetEntry\r\n  ): Observable<boolean> {\r\n    let url = `${this.timeSheetUrl}/timesheetentries/${timeSheetEntryId}`;\r\n    return this.http.put<boolean>(url, timeSheetEntry);\r\n  }\r\n\r\n  removeTimeSheetEntry(timeSheetEntryId: number): Observable<boolean> {\r\n    let url = `${this.timeSheetUrl}/timesheetentries/remove/${timeSheetEntryId}`;\r\n    return this.http.delete<boolean>(url);\r\n  }\r\n\r\n  removeAllTimeSheetEntries(timeSheetId: number): Observable<boolean> {\r\n    let url = `${this.timeSheetUrl}/timesheetentries/removeall/${timeSheetId}`;\r\n    return this.http.delete<boolean>(url);\r\n  }\r\n\r\n  //helper functions\r\n\r\n  getDurationOfWork(timeSheetEntry: TimeSheetEntry): TimeSheetEntry {\r\n    let startTime = timeSheetEntry.fromTime;\r\n    let endTime = timeSheetEntry.toTime;\r\n    if (startTime != '' && endTime != '') {\r\n      const startDate = new Date(`1970-01-01T${startTime}`);\r\n      const endDate = new Date(`1970-01-01T${endTime}`);\r\n\r\n      const durationMilliseconds = endDate.getTime() - startDate.getTime();\r\n      timeSheetEntry.durationInMinutes = durationMilliseconds / (1000 * 60);\r\n      timeSheetEntry.durationInHours = this.convertMinutesintoHours(\r\n        timeSheetEntry.durationInMinutes\r\n      );\r\n    }\r\n    \r\n    return timeSheetEntry;\r\n  }\r\n\r\n  convertMinutesintoHours(minutes: number) {\r\n    let str = `${Math.floor(minutes / 60)}h: ${minutes % 60}m`;\r\n    return str;\r\n  }\r\n\r\n\r\n\r\n\r\n  getTotalDurationOfEmployee(employeeId: number,fromDate:string,toDate:string): Observable<any> {\r\n    let url = `${this.timeSheetUrl}/timesheetentries/duration/workcategory/${employeeId}/${fromDate}/${toDate}`;\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  // http://localhost:5263/api/workmgmt/timesheets/timesheetentries/duration/workcategory/10/2023-01-04/2023-12-04\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}