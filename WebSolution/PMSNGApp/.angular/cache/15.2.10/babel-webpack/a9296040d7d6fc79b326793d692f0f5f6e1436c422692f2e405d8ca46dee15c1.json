{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/activity.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ProjectActivitiesComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r4.title);\n  }\n}\nfunction ProjectActivitiesComponent_div_18_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const activity_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.activityType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.assignDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.assignedBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.assignedTo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.dueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r6.status);\n  }\n}\nfunction ProjectActivitiesComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"ToDo tasks go here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ProjectActivitiesComponent_div_18_div_3_Template, 19, 9, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.todoTasks);\n  }\n}\nfunction ProjectActivitiesComponent_div_19_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const activity_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.activityType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.assignDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.assignedBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.assignedTo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.dueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r8.status);\n  }\n}\nfunction ProjectActivitiesComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Inprogress tasks go here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ProjectActivitiesComponent_div_19_div_3_Template, 19, 9, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.inprogressTasks);\n  }\n}\nfunction ProjectActivitiesComponent_div_20_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const activity_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.activityType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.assignDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.assignedBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.assignedTo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.startDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.dueDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r10.status);\n  }\n}\nfunction ProjectActivitiesComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Completed tasks go here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ProjectActivitiesComponent_div_20_div_3_Template, 19, 9, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.completedTasks);\n  }\n}\nexport class ProjectActivitiesComponent {\n  constructor(service) {\n    this.service = service;\n    this.projects = [];\n    this.activities = [];\n    this.projectId = 0;\n    this.isFalse = false;\n    this.todoTasks = []; // Replace 'any' with the actual type of your tasks\n    this.inprogressTasks = [];\n    this.completedTasks = [];\n    this.showTodoTasks = false;\n    this.showInProgressTasks = false;\n    this.showCompletedTasks = false;\n  }\n  ngOnInit() {\n    this.service.getAllProjects().subscribe(res => {\n      this.projects = res;\n      this.projectId = this.projects[0].id;\n      this.getActivitiesOfSelectedProject(this.projectId);\n    });\n  }\n  getSelectedProjectId(e) {\n    this.projectId = e.target.value;\n    console.log(this.projectId);\n    this.getActivitiesOfSelectedProject(this.projectId);\n  }\n  getActivitiesOfSelectedProject(projectId) {\n    this.service.getAllActivitiesByProject(projectId).subscribe(res => {\n      this.activities = res;\n      this.filterTasks;\n      console.log(res);\n    });\n  }\n  filterTasks() {\n    // Logic to filter tasks and populate todoTasks, inprogressTasks, and completedTasks\n    this.todoTasks = this.activities.filter(p => p.status.includes('todo'));\n    this.inprogressTasks = this.activities.filter(p => p.status.includes('inprogress'));\n    this.completedTasks = this.activities.filter(p => p.status.includes('completed'));\n  }\n  static #_ = this.ɵfac = function ProjectActivitiesComponent_Factory(t) {\n    return new (t || ProjectActivitiesComponent)(i0.ɵɵdirectiveInject(i1.ActivityService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectActivitiesComponent,\n    selectors: [[\"app-project-activities\"]],\n    decls: 21,\n    vars: 7,\n    consts: [[\"for\", \"project\"], [\"id\", \"project\", \"name\", \"project\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"checkbox-container\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [1, \"task-list\"], [4, \"ngIf\"], [3, \"value\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ProjectActivitiesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 0);\n        i0.ɵɵtext(3, \"Project Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 1);\n        i0.ɵɵlistener(\"change\", function ProjectActivitiesComponent_Template_select_change_4_listener($event) {\n          return ctx.getSelectedProjectId($event);\n        });\n        i0.ɵɵtemplate(5, ProjectActivitiesComponent_option_5_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(6, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\")(9, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectActivitiesComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.showTodoTasks = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" ToDo \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\")(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectActivitiesComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.showInProgressTasks = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" Inprogress \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\")(15, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ProjectActivitiesComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.showCompletedTasks = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \" Completed \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵtemplate(18, ProjectActivitiesComponent_div_18_Template, 4, 1, \"div\", 6);\n        i0.ɵɵtemplate(19, ProjectActivitiesComponent_div_19_Template, 4, 1, \"div\", 6);\n        i0.ɵɵtemplate(20, ProjectActivitiesComponent_div_20_Template, 4, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.showTodoTasks);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.showInProgressTasks);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.showCompletedTasks);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTodoTasks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showInProgressTasks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCompletedTasks);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ProjectActivitiesComponent","constructor","service","ngOnInit","getAllProjects","subscribe","res","projects","projectId","id","getActivitiesOfSelectedProject","getSelectedProjectId","e","target","value","console","log","getAllActivitiesByProject","activities","filterTasks","todoTasks","filter","p","status","includes","inprogressTasks","completedTasks","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\project-activities\\project-activities.component.html","C:\\Transflower\\TFLPortal\\WebSolution\\PMSNGApp\\src\\app\\activity\\Components\\project-activities\\project-activities.component.ts"],"sourcesContent":["&nbsp;&nbsp;&nbsp;&nbsp;\n\n<div>\n  <label for=\"project\">Project Name:</label>\n  <select id=\"project\" name=\"project\" (change)=\"getSelectedProjectId($event)\">\n    <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{project.title}}</option>\n  </select>\n</div>&nbsp;&nbsp;&nbsp;&nbsp;\n\n\n<!-- <div class=\"button-container\">\n  <button class=\"button\" (click)=\"showTasks('todo')\">ToDo</button>\n  <button class=\"button\" (click)=\"showTasks('inprogress')\">Inprogress</button>\n  <button class=\"button\" (click)=\"showTasks('completed')\">Completed</button>\n</div> -->\n\n<!-- <div class=\"checkbox-container\">\n  <label>\n    <input type=\"checkbox\" (change)=\"showTasks('todo')\"> ToDo\n  </label>\n  <label>\n    <input type=\"checkbox\" (change)=\"showTasks('inprogress')\"> Inprogress\n  </label>\n  <label>\n    <input type=\"checkbox\" (change)=\"showTasks('completed')\"> Completed\n  </label>\n</div>\n\n<div class=\"task-list\">\n  \n  <div *ngIf=\"showTodoTasks\">ToDo tasks go here</div>\n  <div *ngIf=\"showInProgressTasks\">Inprogress tasks go here</div>\n  <div *ngIf=\"showCompletedTasks\">Completed tasks go here</div>\n</div>\n\n<div id=\"tasksContainer\" *ngIf=\"isFalse\">\n  <div class=\"container\">\n    <h2> Activities Of Employees</h2>\n    <div class=\"card\">\n      <table class=\"table-bordered text-center\">\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th>activityType</th>\n            <th>title</th>\n            <th>description</th>\n            <th>assignDate</th>\n            <th>assignedBy</th>\n            <th>assignedTo</th>\n            <th>startDate</th>\n            <th>dueDate</th>\n            <th>status</th>\n          </tr>\n        </thead>\n        <tbody *ngFor=\"let activity of tasks\">\n          <tr>\n            <td>\n              <input type=\"checkbox\" [(ngModel)]=\"activity.status\">\n            </td>\n            <td>{{activity.activityType}}</td>\n            <td>{{activity.title}}</td>\n            <td>{{activity.description}}</td>\n            <td>{{activity.assignDate}}</td>\n            <td>{{activity.assignedBy}}</td>\n            <td>{{activity.assignedTo}}</td>\n            <td>{{activity.startDate}}</td>\n            <td>{{activity.dueDate}}</td>\n            <td>{{activity.status}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div> -->\n\n\n\n<div class=\"checkbox-container\">\n  <label>\n    <input type=\"checkbox\" [(ngModel)]=\"showTodoTasks\"> ToDo\n  </label>\n  <label>\n    <input type=\"checkbox\" [(ngModel)]=\"showInProgressTasks\"> Inprogress\n  </label>\n  <label>\n    <input type=\"checkbox\" [(ngModel)]=\"showCompletedTasks\"> Completed\n  </label>\n</div>\n\n<div class=\"task-list\">\n  <div *ngIf=\"showTodoTasks\">\n    <h3>ToDo tasks go here</h3>\n    <div *ngFor=\"let activity of todoTasks\">\n      <td>{{activity.activityType}}</td>\n      <td>{{activity.title}}</td>\n      <td>{{activity.description}}</td>\n      <td>{{activity.assignDate}}</td>\n      <td>{{activity.assignedBy}}</td>\n      <td>{{activity.assignedTo}}</td>\n      <td>{{activity.startDate}}</td>\n      <td>{{activity.dueDate}}</td>\n      <td>{{activity.status}}</td>\n    </div>\n  </div>\n  \n  <div *ngIf=\"showInProgressTasks\">\n    <h3>Inprogress tasks go here</h3>\n    <div *ngFor=\"let activity of inprogressTasks\">\n      <td>{{activity.activityType}}</td>\n      <td>{{activity.title}}</td>\n      <td>{{activity.description}}</td>\n      <td>{{activity.assignDate}}</td>\n      <td>{{activity.assignedBy}}</td>\n      <td>{{activity.assignedTo}}</td>\n      <td>{{activity.startDate}}</td>\n      <td>{{activity.dueDate}}</td>\n      <td>{{activity.status}}</td>\n    </div>\n  </div>\n\n  <div *ngIf=\"showCompletedTasks\">\n    <h3>Completed tasks go here</h3>\n    <div *ngFor=\"let activity of completedTasks\">\n      <td>{{activity.activityType}}</td>\n      <td>{{activity.title}}</td>\n      <td>{{activity.description}}</td>\n      <td>{{activity.assignDate}}</td>\n      <td>{{activity.assignedBy}}</td>\n      <td>{{activity.assignedTo}}</td>\n      <td>{{activity.startDate}}</td>\n      <td>{{activity.dueDate}}</td>\n      <td>{{activity.status}}</td>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivityService } from '../../Services/activity.service';\nimport { Project } from 'src/app/projects/Models/project';\nimport { Activity } from '../../Models/Activity';\n\n@Component({\n  selector: 'app-project-activities',\n  templateUrl: './project-activities.component.html',\n  styleUrls: ['./project-activities.component.css'],\n})\nexport class ProjectActivitiesComponent implements OnInit {\n  projects: Project[] = [];\n  activities: Activity[] = [];\n  projectId: number = 0;\n  isFalse:boolean=false;\n  todoTasks: Activity[] = []; // Replace 'any' with the actual type of your tasks\n  inprogressTasks: Activity[] = [];\n  completedTasks: Activity[] = [];\n  showTodoTasks: boolean = false;\n  showInProgressTasks: boolean = false;\n  showCompletedTasks: boolean = false;\n  \n  constructor(private service: ActivityService) {}\n\n  ngOnInit(): void {\n    this.service.getAllProjects().subscribe((res) => {\n      this.projects = res;\n      this.projectId = this.projects[0].id;\n      this.getActivitiesOfSelectedProject(this.projectId);\n    });\n  }\n\n  getSelectedProjectId(e: any) {\n    this.projectId = e.target.value;\n    console.log(this.projectId);\n    this.getActivitiesOfSelectedProject(this.projectId);\n  }\n\n  getActivitiesOfSelectedProject(projectId: number) {\n    this.service.getAllActivitiesByProject(projectId).subscribe((res) => {\n      this.activities = res;\n    this.filterTasks\n      console.log(res);\n    });\n  }\n\n\n  filterTasks() {\n    // Logic to filter tasks and populate todoTasks, inprogressTasks, and completedTasks\n    this.todoTasks= this.activities.filter((p) => p.status.includes('todo'));\n    this.inprogressTasks= this.activities.filter((p) =>p.status.includes('inprogress'));\n    this.completedTasks=this.activities.filter((p) =>p.status.includes('completed'));\n  }\n \n  // showTasks(taskType: string) {\n  //   // Reset other checkboxes when a checkbox is checked\n  //   if (taskType === 'todo') {\n  //     this.showTodoTasks = !this.showTodoTasks;\n  //     this.tasks = this.activities.filter((p) => p.status.includes('todo'));\n  //     this.showInProgressTasks = false;\n  //     this.showCompletedTasks = false;\n  //   } else if (taskType === 'inprogress') {\n  //     this.showInProgressTasks = !this.showInProgressTasks;\n  //     this.tasks = this.activities.filter((p) =>p.status.includes('inprogress'));\n  //     this.showTodoTasks = false;\n  //     this.showCompletedTasks = false;\n  //   } else if (taskType === 'completed') {\n  //     this.showCompletedTasks = !this.showCompletedTasks;\n  //     this.tasks = this.activities.filter((p) =>p.status.includes('completed'));\n  //     this.showTodoTasks = false;\n  //     this.showInProgressTasks = false;\n  //   }\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}