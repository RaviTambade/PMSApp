{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.serviceurl = \"http://localhost:5248/api/\";\n    this.selectedProjectIdSubject = new BehaviorSubject(null);\n    this.selectedProjectId$ = this.selectedProjectIdSubject.asObservable();\n  }\n  setSelectedProjectId(id) {\n    this.selectedProjectIdSubject.next(id);\n  }\n  getProjectsList(teamMemberId) {\n    let url = this.serviceurl + \"projects/list/\" + teamMemberId;\n    return this.httpClient.get(url);\n  }\n  getProjectDetails(projectId) {\n    let url = this.serviceurl + \"projects/\" + projectId;\n    return this.httpClient.get(url);\n  }\n  // getProjectNames(employeeId: number): Observable<Projectname[]> {\n  //   let url = this.serviceurl+\"projects/employee/\" + employeeId\n  //   return this.httpClient.get<Projectname[]>(url)\n  // }\n  // getManagerProjects(managerId: number): Observable<Projectlist[]> {\n  //   let url = this.serviceurl+\"projects/manager/\" + managerId\n  //   return this.httpClient.get<Projectlist[]>(url)\n  // }\n  addProject(project) {\n    let url = this.serviceurl + \"projects/addproject\";\n    return this.httpClient.post(url, project);\n  }\n  // updateProject(project: Project): Observable<boolean> {\n  //   let url = this.serviceurl+\"/projects\"\n  //   return this.httpClient.put<boolean>(url, project)\n  // }\n  // deleteProject(projectId: number): Observable<boolean> {\n  //   let url = this.serviceurl+\"projects/\" + projectId\n  //   return this.httpClient.delete<boolean>(url)\n  // }   \n  // getEmployeeIdWithUserId(projectId:number):Observable<Employeeidwithuserid[]>{\n  //   let url=this.serviceurl+\"projects/employeeidwithuserid/\" +projectId\n  //   return this.httpClient.get< Employeeidwithuserid[]>(url)\n  // }\n  // getProjectTitle(projectId:number):Observable<string>{\n  //   let url=this.serviceurl+\"projects/title/\" + projectId\n  //   return this.httpClient.get(url, { responseType: 'text' })\n  // }\n  // getManagerProjectNames(managerId:number):Observable<Projectname[]>{\n  //   let url=this.serviceurl+\"projects/managerprojects/\" + managerId\n  //   return this.httpClient.get<Projectname[]>(url)\n  // }\n  // getTeamMemberIds(teamManagerId:number):Observable<number[]>{\n  //   let url=this.serviceurl+\"projects/teammemberids/\" +teamManagerId\n  //   return this.httpClient.get<number[]>(url)\n  // }\n  getProjectDetailsById(projectId) {\n    let url = this.serviceurl + \"projects/\" + projectId;\n    return this.httpClient.get(url);\n  }\n}\n_class = ProjectsService;\n_class.ɵfac = function ProjectsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,eAAe,QAAoB,MAAM;;;AAOlD,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IADtB,eAAU,GAAS,4BAA4B;IAE/C,6BAAwB,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;IACjE,uBAAkB,GAAG,IAAI,CAACI,wBAAwB,CAACC,YAAY,EAAE;EAFnB;EAI9CC,oBAAoB,CAACC,EAAiB;IACpC,IAAI,CAACH,wBAAwB,CAACI,IAAI,CAACD,EAAE,CAAC;EACxC;EAEAE,eAAe,CAACC,YAAoB;IAClC,IAAIC,GAAG,GAAG,IAAI,CAACC,UAAU,GAAC,gBAAgB,GAAGF,YAAY;IACzD,OAAO,IAAI,CAACP,UAAU,CAACU,GAAG,CAAYF,GAAG,CAAC;EAC5C;EAEAG,iBAAiB,CAACC,SAAiB;IACjC,IAAIJ,GAAG,GAAG,IAAI,CAACC,UAAU,GAAC,WAAW,GAAGG,SAAS;IACjD,OAAO,IAAI,CAACZ,UAAU,CAACU,GAAG,CAAUF,GAAG,CAAC;EAC1C;EAIA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEAK,UAAU,CAACC,OAAgB;IACzB,IAAIN,GAAG,GAAG,IAAI,CAACC,UAAU,GAAC,qBAAqB;IAC/C,OAAO,IAAI,CAACT,UAAU,CAACe,IAAI,CAAUP,GAAG,EAAEM,OAAO,CAAC;EACpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEAE,qBAAqB,CAACJ,SAAiB;IACrC,IAAIJ,GAAG,GAAC,IAAI,CAACC,UAAU,GAAC,WAAW,GAAEG,SAAS;IAC9C,OAAO,IAAI,CAACZ,UAAU,CAACU,GAAG,CAAUF,GAAG,CAAC;EAC1C;;SAnEWV,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAmB,SAAfnB,MAAe;EAAAoB,YAFd;AAAM","names":["BehaviorSubject","ProjectsService","constructor","httpClient","selectedProjectIdSubject","asObservable","setSelectedProjectId","id","next","getProjectsList","teamMemberId","url","serviceurl","get","getProjectDetails","projectId","addProject","project","post","getProjectDetailsById","factory","providedIn"],"sourceRoot":"","sources":["C:\\Resources\\PMSApp\\UI\\PMSNGApp\\src\\app\\projects\\Services\\projects.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Project } from '../Models/project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n  \r\n  private serviceurl :string=\"http://localhost:5248/api/\";\r\n  constructor(private httpClient: HttpClient) { }\r\n  private selectedProjectIdSubject = new BehaviorSubject<any>(null);\r\n  selectedProjectId$ = this.selectedProjectIdSubject.asObservable();\r\n\r\n  setSelectedProjectId(id: number | null) {\r\n    this.selectedProjectIdSubject.next(id)\r\n  }\r\n\r\n  getProjectsList(teamMemberId: number): Observable<Project[]> {\r\n    let url = this.serviceurl+\"projects/list/\" + teamMemberId\r\n    return this.httpClient.get<Project[]>(url)\r\n  }\r\n\r\n  getProjectDetails(projectId: number): Observable<Project> {\r\n    let url = this.serviceurl+\"projects/\" + projectId\r\n    return this.httpClient.get<Project>(url)\r\n  }\r\n\r\n  \r\n\r\n  // getProjectNames(employeeId: number): Observable<Projectname[]> {\r\n  //   let url = this.serviceurl+\"projects/employee/\" + employeeId\r\n  //   return this.httpClient.get<Projectname[]>(url)\r\n  // }\r\n\r\n  // getManagerProjects(managerId: number): Observable<Projectlist[]> {\r\n  //   let url = this.serviceurl+\"projects/manager/\" + managerId\r\n  //   return this.httpClient.get<Projectlist[]>(url)\r\n  // }\r\n\r\n  addProject(project: Project): Observable<boolean> {\r\n    let url = this.serviceurl+\"projects/addproject\"\r\n    return this.httpClient.post<boolean>(url, project)\r\n  }\r\n  // updateProject(project: Project): Observable<boolean> {\r\n  //   let url = this.serviceurl+\"/projects\"\r\n  //   return this.httpClient.put<boolean>(url, project)\r\n  // }\r\n  // deleteProject(projectId: number): Observable<boolean> {\r\n  //   let url = this.serviceurl+\"projects/\" + projectId\r\n  //   return this.httpClient.delete<boolean>(url)\r\n  // }   \r\n  \r\n  // getEmployeeIdWithUserId(projectId:number):Observable<Employeeidwithuserid[]>{\r\n  //   let url=this.serviceurl+\"projects/employeeidwithuserid/\" +projectId\r\n  //   return this.httpClient.get< Employeeidwithuserid[]>(url)\r\n  // }\r\n  // getProjectTitle(projectId:number):Observable<string>{\r\n  //   let url=this.serviceurl+\"projects/title/\" + projectId\r\n  //   return this.httpClient.get(url, { responseType: 'text' })\r\n  // }\r\n  // getManagerProjectNames(managerId:number):Observable<Projectname[]>{\r\n  //   let url=this.serviceurl+\"projects/managerprojects/\" + managerId\r\n  //   return this.httpClient.get<Projectname[]>(url)\r\n  // }\r\n\r\n  // getTeamMemberIds(teamManagerId:number):Observable<number[]>{\r\n  //   let url=this.serviceurl+\"projects/teammemberids/\" +teamManagerId\r\n  //   return this.httpClient.get<number[]>(url)\r\n  // }\r\n\r\n  getProjectDetailsById(projectId :number):Observable<Project>{\r\n    let url=this.serviceurl+\"projects/\"+ projectId\r\n    return this.httpClient.get<Project>(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}