{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/resource-management/Services/resource-management.service\";\nimport * as i3 from \"src/app/projects/Services/projects.service\";\nimport * as i4 from \"@angular/router\";\nexport class InsertComponent {\n  constructor(formBuilder, employeeService, projectService, router) {\n    this.formBuilder = formBuilder;\n    this.employeeService = employeeService;\n    this.projectService = projectService;\n    this.router = router;\n    this.managerId = 4;\n    this.userId = 1;\n    this.addProjectForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      description: ['', [Validators.required]],\n      status: ['', [Validators.required]],\n      teamManagerId: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    // let userId = localStorage.getItem('userId');\n    // this.employeeService.getEmployeeId(this.userId).subscribe((res) => {\n    //   this.managerId = res;\n    //   });\n  }\n  onSubmit() {\n    if (this.addProjectForm.valid) {\n      let project = {\n        id: 0,\n        title: this.addProjectForm.get('title')?.value,\n        startDate: this.addProjectForm.get('startDate')?.value,\n        // endDate: this.addProjectForm.get('endDate')?.value,\n        // description: this.addProjectForm.get('description')?.value,\n        status: this.addProjectForm.get('status')?.value,\n        teamManagerId: this.addProjectForm.get('teamManagerId')?.value,\n        teamManagerUserId: 0\n      };\n      this.projectService.addProject(project).subscribe(res => {\n        if (res) {\n          alert('project added Sucessfully');\n          this.router.navigate([\"teammanager/projects\"]);\n          this.addProjectForm.reset();\n        }\n      });\n    }\n  }\n}\n_class = InsertComponent;\n_class.ɵfac = function InsertComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ResourceManagementService), i0.ɵɵdirectiveInject(i3.ProjectsService), i0.ɵɵdirectiveInject(i4.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-insert\"]],\n  decls: 37,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Enter Title\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"formControlName\", \"startDate\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"formControlName\", \"endDate\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"4\", \"placeholder\", \"Enter Description\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"Pending\"], [\"for\", \"teamManagerId\", \"hidden\", \"\"], [\"type\", \"number\", \"id\", \"teamManagerId\", \"formControlName\", \"teamManagerId\", \"placeholder\", \"Enter Team Manager ID\", \"required\", \"\", \"readonly\", \"\", \"hidden\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function InsertComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Add Project\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function InsertComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Start Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"End Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"div\", 3);\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"textarea\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 13);\n      i0.ɵɵtext(25, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"select\", 14)(27, \"option\", 15);\n      i0.ɵɵtext(28, \"Pending\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\", 4)(30, \"label\", 16);\n      i0.ɵɵtext(31, \"Team Manager ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function InsertComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.managerId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(33, \"br\")(34, \"br\");\n      i0.ɵɵelementStart(35, \"button\", 18);\n      i0.ɵɵtext(36, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.addProjectForm);\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngModel\", ctx.managerId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.addProjectForm.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","InsertComponent","constructor","formBuilder","employeeService","projectService","router","addProjectForm","group","title","required","startDate","endDate","description","status","teamManagerId","ngOnInit","onSubmit","valid","project","id","get","value","teamManagerUserId","addProject","subscribe","res","alert","navigate","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Resources\\PMSApp\\UI\\PMSNGApp\\src\\app\\projects\\Components\\Forms\\insert\\insert.component.ts","C:\\Resources\\PMSApp\\UI\\PMSNGApp\\src\\app\\projects\\Components\\Forms\\insert\\insert.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Project } from 'src/app/projects/Models/project';\r\nimport { ProjectsService } from 'src/app/projects/Services/projects.service';\r\nimport { ResourceManagementService } from 'src/app/resource-management/Services/resource-management.service';\r\n\r\n@Component({\r\n  selector: 'app-insert',\r\n  templateUrl: './insert.component.html',\r\n  styleUrls: ['./insert.component.css']\r\n})\r\nexport class InsertComponent implements OnInit {\r\n  addProjectForm: FormGroup;\r\n  managerId: number = 4;\r\n  userId:number =1;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private employeeService: ResourceManagementService,\r\n    private projectService: ProjectsService,\r\n    private router:Router\r\n  ) {\r\n    this.addProjectForm = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      startDate: ['', Validators.required],\r\n      endDate: ['', Validators.required],\r\n      description: ['', [Validators.required]],\r\n      status: ['', [Validators.required]],\r\n      teamManagerId: ['', [Validators.required]],\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    // let userId = localStorage.getItem('userId');\r\n    // this.employeeService.getEmployeeId(this.userId).subscribe((res) => {\r\n    //   this.managerId = res;\r\n    //   });\r\n  }\r\n  onSubmit() {\r\n    if (this.addProjectForm.valid) {\r\n      let project: Project = {\r\n        id: 0,\r\n        title: this.addProjectForm.get('title')?.value,\r\n        startDate: this.addProjectForm.get('startDate')?.value,\r\n        // endDate: this.addProjectForm.get('endDate')?.value,\r\n        // description: this.addProjectForm.get('description')?.value,\r\n        status: this.addProjectForm.get('status')?.value,\r\n        teamManagerId: this.addProjectForm.get('teamManagerId')?.value,\r\n        teamManagerUserId: 0\r\n      };\r\n      this.projectService.addProject(project).subscribe((res) => {\r\n        if (res) {\r\n          alert('project added Sucessfully');\r\n          this.router.navigate([\"teammanager/projects\"])\r\n          this.addProjectForm.reset();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\n<div class=\"container mt-5\">\r\n    <h2>Add Project</h2>\r\n    <form [formGroup]=\"addProjectForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"title\" formControlName=\"title\" placeholder=\"Enter Title\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"startDate\">Start Date</label>\r\n        <input type=\"date\" class=\"form-control\" id=\"startDate\" formControlName=\"startDate\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"endDate\">End Date</label>\r\n        <input type=\"date\" class=\"form-control\" id=\"endDate\" formControlName=\"endDate\" required>\r\n      </div>\r\n        </div>\r\n      <div class=\"col-md-6\"></div>\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <textarea class=\"form-control\" id=\"description\" formControlName=\"description\" rows=\"4\" placeholder=\"Enter Description\" required></textarea>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"status\">Status</label>\r\n        <select class=\"form-control\" id=\"status\" formControlName=\"status\" required >\r\n          <option value=\"Pending\">Pending</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"teamManagerId\" hidden>Team Manager ID</label>\r\n        <input type=\"number\" class=\"form-control\" id=\"teamManagerId\" formControlName=\"teamManagerId\" [(ngModel)]=\"managerId\" placeholder=\"Enter Team Manager ID\" required readonly hidden>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!addProjectForm.valid\">Submit</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n  \r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}