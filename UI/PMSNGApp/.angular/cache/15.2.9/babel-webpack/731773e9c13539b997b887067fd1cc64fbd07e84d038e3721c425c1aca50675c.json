{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.serviceurl = \"http://localhost:5283/api/\";\n  }\n  // unAssignedTask(projectId: number, timePeriod: string): Observable<Unassignedtask[]> {\n  //   let url =this.serviceurl+ \"projects/unassignedtask/\" + projectId + \"/\" + timePeriod\n  //   return this.httpClient.get<Unassignedtask[]>(url)\n  // }\n  // assignedTasksByManager(managerId:number,timePeriod:string):Observable<Assignedtaskbymanager[]>{\n  //   let url=this.serviceurl+\"projects/assignedtasksbymanager/\" + managerId + \"/\" +timePeriod\n  //   return this.httpClient.get<Assignedtaskbymanager[]>(url)\n  // }\n  // unAssignedTasksByManager(managerId:number,timePeriod:string):Observable<Unassignedtaskbymanager[]>{\n  //   let url=this.serviceurl+\"/projects/unassignedtasksbymanager/\" + managerId + \"/\" +timePeriod\n  //   return this.httpClient.get<Unassignedtaskbymanager[]>(url)\n  // }\n  // getTasksOfProject(projectId: number, timePeriod: string): Observable<Projecttask[]> {\n  //   let url = this.serviceurl+\"projects/tasks/\" + projectId + \"/\" + timePeriod\n  //   return this.httpClient.get<Projecttask[]>(url)\n  // }\n  getTaskDetails(taskId) {\n    let url = this.serviceurl + \"tasks/details/\" + taskId;\n    return this.httpClient.get(url);\n  }\n}\n_class = TaskService;\n_class.ɵfac = function TaskService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAE9B,eAAU,GAAS,4BAA4B;EAFF;EAI7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEAC,cAAc,CAACC,MAAa;IAC1B,IAAIC,GAAG,GAAG,IAAI,CAACC,UAAU,GAAC,gBAAgB,GAAGF,MAAM;IACnD,OAAO,IAAI,CAACF,UAAU,CAACK,GAAG,CAAOF,GAAG,CAAC;EACvC;;SA3BWL,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAQ,SAAXR,MAAW;EAAAS,YAFV;AAAM","names":["TaskService","constructor","httpClient","getTaskDetails","taskId","url","serviceurl","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Resources\\PMSApp\\UI\\PMSNGApp\\src\\app\\task\\Services\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { task } from '../Models/task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  serviceurl :string=\"http://localhost:5283/api/\"\r\n\r\n  // unAssignedTask(projectId: number, timePeriod: string): Observable<Unassignedtask[]> {\r\n  //   let url =this.serviceurl+ \"projects/unassignedtask/\" + projectId + \"/\" + timePeriod\r\n  //   return this.httpClient.get<Unassignedtask[]>(url)\r\n  // }\r\n  // assignedTasksByManager(managerId:number,timePeriod:string):Observable<Assignedtaskbymanager[]>{\r\n  //   let url=this.serviceurl+\"projects/assignedtasksbymanager/\" + managerId + \"/\" +timePeriod\r\n  //   return this.httpClient.get<Assignedtaskbymanager[]>(url)\r\n  // }\r\n  // unAssignedTasksByManager(managerId:number,timePeriod:string):Observable<Unassignedtaskbymanager[]>{\r\n  //   let url=this.serviceurl+\"/projects/unassignedtasksbymanager/\" + managerId + \"/\" +timePeriod\r\n  //   return this.httpClient.get<Unassignedtaskbymanager[]>(url)\r\n  // }\r\n\r\n  // getTasksOfProject(projectId: number, timePeriod: string): Observable<Projecttask[]> {\r\n  //   let url = this.serviceurl+\"projects/tasks/\" + projectId + \"/\" + timePeriod\r\n  //   return this.httpClient.get<Projecttask[]>(url)\r\n  // }\r\n\r\n  getTaskDetails(taskId:number): Observable<task> {\r\n    let url = this.serviceurl+\"tasks/details/\" + taskId \r\n    return this.httpClient.get<task>(url)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}